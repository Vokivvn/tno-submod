########################################################################
##  ██████╗  ██████╗ ██████╗ ███╗   ███╗ █████╗ ███╗   ██╗███╗   ██╗  ##
##  ██╔══██╗██╔═══██╗██╔══██╗████╗ ████║██╔══██╗████╗  ██║████╗  ██║  ##
##  ██████╔╝██║   ██║██████╔╝██╔████╔██║███████║██╔██╗ ██║██╔██╗ ██║  ##
##  ██╔══██╗██║   ██║██╔══██╗██║╚██╔╝██║██╔══██║██║╚██╗██║██║╚██╗██║  ##
##  ██████╔╝╚██████╔╝██║  ██║██║ ╚═╝ ██║██║  ██║██║ ╚████║██║ ╚████║  ##
##  ╚═════╝  ╚═════╝ ╚═╝  ╚═╝╚═╝     ╚═╝╚═╝  ╚═╝╚═╝  ╚═══╝╚═╝  ╚═══╝  ##
########################################################################

#Influence Mechanic effects are stored in -/common/scripted_effects/TNO_Bormann_InfluenceMech_scripted_effects.txt

######################
# Focus Tree Reloads #
######################

reload_GER_bormann_post_cw_tree = {
	custom_effect_tooltip = GER_new_options_focus_tree

	hidden_effect = {
		if = {
			limit = { NOT = { has_focus_tree = GER_bormann_post_cw_tree } }
			load_focus_tree = GER_bormann_post_cw_tree
		}
		mark_focus_tree_layout_dirty = yes
	}
}


##Opening tree dynamic modifiers##

shellshocked_wehrmacht = {
	hidden_effect = { add_dynamic_modifier = { modifier = GER_BOR_shellshocked_wehrmacht_dynamic_modifier } }
	set_variable = {
		var = BOR_shellshock_officers
		value = -50
	}
	
	set_variable = {
		var = BOR_shellshock_army
		value = -0.1
	}
	
	set_variable = {
		var = BOR_shellshock_airforce
		value = -0.1
	}
	
	set_variable = {
		var = BOR_shellshock_navy
		value = -0.1
	}
}

healing_wehrmacht = {
	set_variable = {
		var = BOR_shellshock_officers
		value = -5
	}
	
	set_variable = {
		var = BOR_shellshock_army
		value = -0.1
	}
	
	set_variable = {
		var = BOR_shellshock_airforce
		value = -0.1
	}
	
	set_variable = {
		var = BOR_shellshock_navy
		value = -0.1
	}
}

cleansed_wehrmacht = {
	set_variable = {
		var = BOR_shellshock_officers
		value = -50
	}
	
	set_variable = {
		var = BOR_shellshock_army
		value = -0.01
	}
	
	set_variable = {
		var = BOR_shellshock_airforce
		value = -0.01
	}
	
	set_variable = {
		var = BOR_shellshock_navy
		value = -0.01
	}
}



rejuvenated_wehrmacht = {
	remove_dynamic_modifier = { modifier = GER_BOR_shellshocked_wehrmacht_dynamic_modifier }
	clear_variable = BOR_shellshock_officers
	clear_variable = BOR_shellshock_army
	clear_variable = BOR_shellshock_navy
	clear_variable = BOR_shellshock_airforce
}

thousand_pieces_heavy = {
	hidden_effect = { add_dynamic_modifier = { modifier = GER_BOR_the_Reich_in_thousand_pieces_dynamic_modifier } }
	set_variable = {
		var = BOR_pieces_conscription
		value = -0.25
	}
	
	set_variable = {
		var = BOR_pieces_unrest
		value = -0.10
	}
	
	set_variable = {
		var = BOR_pieces_pacifism
		value = -0.10
	}
	
	set_variable = {
		var = BOR_pieces_wariness
		value = -0.25
	}
}


thousand_pieces_medium = {
	set_variable = {
		var = BOR_pieces_conscription
		value = -0.2
	}
	
	set_variable = {
		var = BOR_pieces_unrest
		value = -0.05
	}
	
	set_variable = {
		var = BOR_pieces_pacifism
		value = -0.05
	}
	
	set_variable = {
		var = BOR_pieces_wariness
		value = -0.2
	}
}

thousand_pieces_low = {
	set_variable = {
		var = BOR_pieces_conscription
		value = -0.05
	}
	
	set_variable = {
		var = BOR_pieces_unrest
		value = -0.01
	}
	
	set_variable = {
		var = BOR_pieces_pacifism
		value = -0.01
	}
	
	set_variable = {
		var = BOR_pieces_wariness
		value = -0.05
	}
}

thousand_pieces_minimal = {
	remove_dynamic_modifier = { modifier = GER_BOR_the_Reich_in_thousand_pieces_dynamic_modifier }
	clear_variable = BOR_pieces_conscription
	clear_variable = BOR_pieces_unrest
	clear_variable = BOR_pieces_pacifism
	clear_variable = BOR_pieces_wariness
}


bormann_lost_generation = {
	hidden_effect = { add_dynamic_modifier = { modifier = GER_BOR_lost_generation_dynamic_modifier } }
	set_variable = {
		var = BOR_youth_productivity
		value = -0.25
	}
	set_variable = {
		var = BOR_youth_industry
		value = -0.25
	}
	set_variable = {
		var = BOR_youth_efficiency
		value = -0.25
	}
	set_variable = {
		var = BOR_youth_political_power
		value = 0.30
	}
	set_variable = {
		var = BOR_youth_conscription
		value = 0.15
	}
}

bormann_lost_generation_heavy = {
	set_variable = {
		var = BOR_youth_productivity
		value = -0.15
	}
	set_variable = {
		var = BOR_youth_industry
		value = -0.15
	}
	set_variable = {
		var = BOR_youth_efficiency
		value = -0.15
	}
	set_variable = {
		var = BOR_youth_political_power
		value = 0.35
	}
	set_variable = {
		var = BOR_youth_conscription
		value = -0.15
	}
}

bormann_lost_generation_medium = {
	set_variable = {
		var = BOR_youth_productivity
		value = -0.05
	}
	set_variable = {
		var = BOR_youth_industry
		value = -0.05
	}
	set_variable = {
		var = BOR_youth_efficiency
		value = -0.05
	}
	set_variable = {
		var = BOR_youth_political_power
		value = 0.40
	}
	set_variable = {
		var = BOR_youth_conscription
		value = -0.1
	}
}

bormann_lost_generation_low = {
	set_variable = {
		var = BOR_youth_productivity
		value = -0.01
	}
	set_variable = {
		var = BOR_youth_industry
		value = -0.01
	}
	set_variable = {
		var = BOR_youth_efficiency
		value = -0.01
	}
	set_variable = {
		var = BOR_youth_political_power
		value = 0.45
	}
	set_variable = {
		var = BOR_youth_conscription
		value = -0.05
	}
}

bormann_lost_generation_minimal = {
	hidden_effect = { remove_dynamic_modifier = { modifier = GER_BOR_lost_generation_dynamic_modifier } }
	clear_variable = BOR_youth_productivity
	clear_variable = BOR_youth_industry
	clear_variable = BOR_youth_efficiency
	clear_variable = BOR_youth_political_power
	clear_variable = BOR_youth_conscription
}

GER_BOR_NOR_fail_negotiations = {
	custom_effect_tooltip = BOR_NOR_negotiations_will_end
	hidden_effect = {
		country_event = { id = bormann.1068 days = 1 }
		GER = { country_event = { id = bormann.1068 days = 1 } }
	}
}

# Adds one entry to the SIG GUI log list, needs to be fired before the cycling effect can be done
GER_BOR_SIG_GUI_expand_log_list = {
	if = {
		limit = { check_variable = { BOR_SIGLogs_num < 50 } } # Edit this variable to increase the maximum number of logs
		add_to_variable = { BOR_SIGLogs_num = 1 }
		resize_array = { BOR_SIGLogs = BOR_SIGLogs_num }
		resize_array = { BOR_SIG_Log_Actor = BOR_SIGLogs_num }
		resize_array = { BOR_SIG_Log_AffectedSIG = BOR_SIGLogs_num }
		resize_array = { BOR_SIG_Log_InteractionType = BOR_SIGLogs_num }
		resize_array = { BOR_SIG_Log_InteractionTarget = BOR_SIGLogs_num }
		resize_array = { BOR_SIG_Log_BeforeValue = BOR_SIGLogs_num }
		resize_array = { BOR_SIG_Log_AfterValue = BOR_SIGLogs_num }
		resize_array = { BOR_SIG_Log_ValueChange = BOR_SIGLogs_num }
	}
}

# Cycles the logs, moving the values one index upstream and clearing the first log so that new values can be added
GER_BOR_SIG_GUI_cycle_logs = {
	# Setting up a bunch of temp arrays where the current values can be stored safely for the time being
	for_each_loop = { # Duplicate the arrays and their values
		array = BOR_SIGLogs
		set_variable = { BOR_SIG_Log_Actor_Temp^i = BOR_SIG_Log_Actor^i }
		set_variable = { BOR_SIG_Log_AffectedSIG_Temp^i = BOR_SIG_Log_AffectedSIG^i }
		set_variable = { BOR_SIG_Log_InteractionType_Temp^i = BOR_SIG_Log_InteractionType^i }
		set_variable = { BOR_SIG_Log_InteractionTarget_Temp^i = BOR_SIG_Log_InteractionTarget^i }
		set_variable = { BOR_SIG_Log_BeforeValue_Temp^i = BOR_SIG_Log_BeforeValue^i }
		set_variable = { BOR_SIG_Log_AfterValue_Temp^i = BOR_SIG_Log_AfterValue^i }
		set_variable = { BOR_SIG_Log_ValueChange_Temp^i = BOR_SIG_Log_ValueChange^i }
	}

	for_each_loop = { #Now, replace the main array values with the temp array values, parsing through the arrays so that the values are moved one index above
		array = BOR_SIGLogs
		set_temp_variable = { CycleVar = i }
		add_to_temp_variable = { CycleVar = 1 }
		set_variable = { BOR_SIG_Log_Actor^CycleVar = BOR_SIG_Log_Actor_Temp^i }
		set_variable = { BOR_SIG_Log_AffectedSIG^CycleVar = BOR_SIG_Log_AffectedSIG_Temp^i }
		set_variable = { BOR_SIG_Log_InteractionType^CycleVar = BOR_SIG_Log_InteractionType_Temp^i }
		set_variable = { BOR_SIG_Log_InteractionTarget^CycleVar = BOR_SIG_Log_InteractionTarget_Temp^i }
		set_variable = { BOR_SIG_Log_BeforeValue^CycleVar = BOR_SIG_Log_BeforeValue_Temp^i }
		set_variable = { BOR_SIG_Log_AfterValue^CycleVar = BOR_SIG_Log_AfterValue_Temp^i }
		set_variable = { BOR_SIG_Log_ValueChange^CycleVar = BOR_SIG_Log_ValueChange_Temp^i }
	}

	# Throw away the temp arrays
	clear_array = BOR_SIG_Log_Actor_Temp
	clear_array = BOR_SIG_Log_AffectedSIG_Temp
	clear_array = BOR_SIG_Log_InteractionType_Temp
	clear_array = BOR_SIG_Log_InteractionTarget_Temp
	clear_array = BOR_SIG_Log_BeforeValue_Temp
	clear_array = BOR_SIG_Log_AfterValue_Temp
	clear_array = BOR_SIG_Log_ValueChange_Temp
}

GER_BOR_set_up_moskowien = {
	custom_effect_tooltip = GER_BOR_set_up_moskowien_tt
	hidden_effect = {
		MCW = {
			transfer_state = 219
			if = { limit = { country_exists = VLG } annex_country = { target = VLG transfer_troops = yes } }
			if = { limit = { country_exists = PET } annex_country = { target = PET transfer_troops = yes } }
			if = { limit = { country_exists = MOS } annex_country = { target = MOS transfer_troops = yes } }
			GER = {
				if = {
					limit = {
						OR = {
							has_dlc = "Together for Victory"
							has_dlc = "Man the Guns"
						}
					}
					set_autonomy = {
						target = MCW
						autonomy_state = autonomy_autonomous_reichskommissariat
					}
				}
				else = { puppet = MCW }
			}
			set_popularities = { national_socialism = 100 }
			set_party_name = {
				ideology = national_socialism
				long_name = "BOR_military_government"
				name = "BOR_military_government"
			}
			create_country_leader = {
				name = "Walther Wenck"
				picture = "gfx/leaders/GER/Portrait_GER_Walther_Wenck.dds"
				expire = "1999.4.24"
				ideology = national_socialism_subtype
			}
			every_unit_leader = {
				limit = { has_id = 107 }
				set_nationality = MCW
			}
			set_cosmetic_tag = MCW_BOR
		}
	}
}

#####################
# South African War #
#####################
GER_Bormann_SAF_initialize_SAW = {

	custom_effect_tooltip = SGR_SAW_entry_tt

	hidden_effect = {
		add_dynamic_modifier = { modifier = GER_BOR_student_protests_dynamic_modifier }
		add_ideas = GER_BOR_student_protests
	
		set_variable = {GER_Bormann_SAW_involvement = 15}
		set_variable = {GER_Bormann_SAW_civilian_protest = 10}
		set_variable = {GER_Bormann_SAW_civilian_protest_growth_base = 0.5}
		set_variable = {GER_Bormann_SAW_involvement_check = GER_Bormann_SAW_involvement}
		set_variable = {GER_advisor_level = 0}
	
		set_variable = {GER_Bormann_SAW_max_stab_hit = 0.05}
		set_variable = {GER_Bormann_SAW_max_pp_hit = 0.1}

		set_country_flag = GER_SAW_intervention
	
		GER_Bormann_SAW_protest_growth = yes
	}
}

GER_Bormann_SAF_conclude_SAW = {
	custom_effect_tooltip = SGR_SAW_conclude_tt

	set_country_flag = GER_Bormann_SAW_withdrawal
	clr_country_flag = GER_SAW_intervention

	remove_ideas = GER_BOR_student_protests
	remove_dynamic_modifier = { modifier = GER_BOR_student_protests_dynamic_modifier }
	hidden_effect = {
		remove_ideas = {
			advisor_level_1
			advisor_level_2
			advisor_level_3
			advisor_level_4
			advisor_level_5
		}
	}
	MZB_REICHSTAAT_calculate_cabal_power = yes
	clear_variable = GER_Bormann_SAW_involvement
	clear_variable = GER_Bormann_SAW_civilian_protest
	clear_variable = GER_Bormann_SAW_civilian_protest_growth_base
	clear_variable = GER_Bormann_SAF_protests_severity_pp
	clear_variable = GER_Bormann_SAF_protests_severity_stab

	if = {
		limit = { has_completed_focus = BOR_alle_waffen_gegen_suedafrika }
		custom_effect_tooltip = econ_misc_expenses_add_medium_decrease
		add_to_variable = { misc_expense = -600 }
	}

	#Calculating how many soldiers end up returning

	set_temp_variable = {tempSoldiers = 1}

	randomize_temp_variable = {
		var = tempSoldiers
		distribution = uniform
		min = 0.5
		max = 0.8
	}

	multiply_variable = {GER_Bormann_SAF_manpower = tempSoldiers}

	round_variable = GER_Bormann_SAF_manpower
}

GER_Bormann_SAW_protest_growth = {
	clamp_variable = {
		var = GER_Bormann_SAW_civilian_protest_growth_base
		min = 0
		max = 10
	}
	
	add_to_variable = {GER_Bormann_SAW_civilian_protest = GER_Bormann_SAW_civilian_protest_growth_base}
	multiply_variable = {GER_Bormann_SAW_civilian_protest_growth_base = 1.5}

	GER_Bormann_SAW_calculate_idea_values = yes

	custom_effect_tooltip = BOR_SAW_war_report_predic_tt

	clamp_variable = {
		var = GER_Bormann_SAW_civilian_protest
		min = 0
		max = 100
	}
	clamp_variable = {
		var = GER_Bormann_SAW_involvement
		min = 0
		max = 100
	}
}

GER_Bormann_SAW_calculate_idea_values = {
	
	set_temp_variable = {tempStab = GER_Bormann_SAW_max_stab_hit}
	set_temp_variable = {tempPP = GER_Bormann_SAW_max_pp_hit}
	set_temp_variable = {tempProtest = GER_Bormann_SAW_civilian_protest}
	
	multiply_temp_variable = {tempProtest = 0.01}
	divide_temp_variable = {tempProtest = 2}

	multiply_temp_variable = {tempStab = tempProtest}
	multiply_temp_variable = {tempStab = -1}
	multiply_temp_variable = {tempPP = tempProtest}
	multiply_temp_variable = {tempPP = -1}

	set_variable = {GER_Bormann_SAF_protests_severity_pp = tempPP}
	set_variable = {GER_Bormann_SAF_protests_severity_stab = tempStab}
}

GER_Bormann_SAW_involvement_increase_small = {
	custom_effect_tooltip = SGR_SAW_involvement_increase_small_tt
	add_to_variable = {GER_Bormann_SAW_involvement = 2.5}
	add_to_variable = {GER_Bormann_SAW_civilian_protest = 2.5}
	clamp_variable = {
		var = GER_Bormann_SAW_civilian_protest
		min = 0
		max = 100
	}
	clamp_variable = {
		var = GER_Bormann_SAW_involvement
		min = 0
		max = 100
	}
}

GER_Bormann_SAW_involvement_increase_med = {
	custom_effect_tooltip = SGR_SAW_involvement_increase_med_tt
	add_to_variable = {GER_Bormann_SAW_involvement = 5}
	add_to_variable = {GER_Bormann_SAW_civilian_protest = 5}
	clamp_variable = {
		var = GER_Bormann_SAW_civilian_protest
		min = 0
		max = 100
	}
	clamp_variable = {
		var = GER_Bormann_SAW_involvement
		min = 0
		max = 100
	}
}

GER_Bormann_SAW_involvement_increase_big = {
	custom_effect_tooltip = SGR_SAW_involvement_increase_big_tt
	add_to_variable = {GER_Bormann_SAW_involvement = 10}
	add_to_variable = {GER_Bormann_SAW_civilian_protest = 10}
	clamp_variable = {
		var = GER_Bormann_SAW_civilian_protest
		min = 0
		max = 100
	}
	clamp_variable = {
		var = GER_Bormann_SAW_involvement
		min = 0
		max = 100
	}
}

GER_Bormann_SAW_involvement_decrease_small = {
	custom_effect_tooltip = SGR_SAW_involvement_decrease_small_tt
	subtract_from_variable = {GER_Bormann_SAW_involvement = 2.5}
	subtract_from_variable = {GER_Bormann_SAW_civilian_protest = 2.5}
	clamp_variable = {
		var = GER_Bormann_SAW_civilian_protest
		min = 0
		max = 100
	}
	clamp_variable = {
		var = GER_Bormann_SAW_involvement
		min = 0
		max = 100
	}
}

GER_Bormann_SAW_involvement_decrease_med = {
	custom_effect_tooltip = SGR_SAW_involvement_decrease_med_tt
	subtract_from_variable = {GER_Bormann_SAW_involvement = 5}
	subtract_from_variable = {GER_Bormann_SAW_civilian_protest = 5}
	clamp_variable = {
		var = GER_Bormann_SAW_civilian_protest
		min = 0
		max = 100
	}
	clamp_variable = {
		var = GER_Bormann_SAW_involvement
		min = 0
		max = 100
	}
}

GER_Bormann_SAW_involvement_decrease_big = {
	custom_effect_tooltip = SGR_SAW_involvement_decrease_big_tt
	subtract_from_variable = {GER_Bormann_SAW_involvement = 10}
	subtract_from_variable = {GER_Bormann_SAW_civilian_protest = 10}
	clamp_variable = {
		var = GER_Bormann_SAW_civilian_protest
		min = 0
		max = 100
	}
	clamp_variable = {
		var = GER_Bormann_SAW_involvement
		min = 0
		max = 100
	}
}

GER_Bormann_SAW_protest_increase_small = {
	custom_effect_tooltip = SGR_SAW_protests_increase_small_tt
	add_to_variable = {GER_Bormann_SAW_civilian_protest = 2.5}
	clamp_variable = {
		var = GER_Bormann_SAW_civilian_protest
		min = 0
		max = 100
	}
	clamp_variable = {
		var = GER_Bormann_SAW_involvement
		min = 0
		max = 100
	}
}

GER_Bormann_SAW_protest_increase_med = {
	custom_effect_tooltip = SGR_SAW_protests_increase_med_tt
	add_to_variable = {GER_Bormann_SAW_civilian_protest = 5}
	clamp_variable = {
		var = GER_Bormann_SAW_civilian_protest
		min = 0
		max = 100
	}
	clamp_variable = {
		var = GER_Bormann_SAW_involvement
		min = 0
		max = 100
	}
}

GER_Bormann_SAW_protest_increase_big = {
	custom_effect_tooltip = SGR_SAW_protests_increase_big_tt
	add_to_variable = {GER_Bormann_SAW_civilian_protest = 10}
	clamp_variable = {
		var = GER_Bormann_SAW_civilian_protest
		min = 0
		max = 100
	}
	clamp_variable = {
		var = GER_Bormann_SAW_involvement
		min = 0
		max = 100
	}
}

GER_Bormann_SAW_protest_decrease_small = {
	custom_effect_tooltip = SGR_SAW_protests_decrease_small_tt
	subtract_from_variable = {GER_Bormann_SAW_civilian_protest = 2.5}
	clamp_variable = {
		var = GER_Bormann_SAW_civilian_protest
		min = 0
		max = 100
	}
	clamp_variable = {
		var = GER_Bormann_SAW_involvement
		min = 0
		max = 100
	}
}

GER_Bormann_SAW_protest_decrease_med = {
	custom_effect_tooltip = SGR_SAW_protests_decrease_med_tt
	subtract_from_variable = {GER_Bormann_SAW_civilian_protest = 5}
	clamp_variable = {
		var = GER_Bormann_SAW_civilian_protest
		min = 0
		max = 100
	}
	clamp_variable = {
		var = GER_Bormann_SAW_involvement
		min = 0
		max = 100
	}
}

GER_Bormann_SAW_protest_decrease_big = {
	custom_effect_tooltip = SGR_SAW_protests_decrease_big_tt
	subtract_from_variable = {GER_Bormann_SAW_civilian_protest = 10}
	clamp_variable = {
		var = GER_Bormann_SAW_civilian_protest
		min = 0
		max = 100
	}
	clamp_variable = {
		var = GER_Bormann_SAW_involvement
		min = 0
		max = 100
	}
}

#####################
# Sphere trade mech #
#####################
# Starter
GER_Bormann_Sphere_Trade_begin = {
	log = "[GetDateText]: [Root.GetName]: Bormann Sphere Trade mechanic initialized"
	unlock_decision_category_tooltip = GER_Bormann_Sphere_Trade_category
	set_variable = { BOR_Sphere_Trade_japan_opinion = 2 }
	set_variable = { BOR_Sphere_Trade_suck_up_cost = 25 }
	set_variable = { BOR_Sphere_Trade_political_power_gain = -0.1 }
	set_variable = { BOR_Sphere_Trade_research_speed_factor_base = 0 }
	set_variable = { BOR_Sphere_Trade_production_factory_efficiency_gain_factor_base = 0.03 }
	set_variable = { BOR_Sphere_Trade_gdp_growth_modifier_base = 0.001 }
	set_variable = { BOR_Sphere_Trade_research_speed_factor = 0 }
	set_variable = { BOR_Sphere_Trade_production_factory_efficiency_gain_factor = 0 }
	set_variable = { BOR_Sphere_Trade_gdp_growth_modifier = 0 }
	add_dynamic_modifier = { modifier = GER_BOR_sphere_trade_dynamic_modifier }
	hidden_effect = { add_ideas = GER_BOR_sphere_trade }
	custom_effect_tooltip = GER_BOR_sphere_trading_depends_on_relations_tt
	GER_Bormann_Sphere_Trade_calculate_relationship_effects = yes
}

# Increase opinion
GER_Bormann_Sphere_Trade_increase_opinion_low = {
	log = "[GetDateText]: [Root.GetName]: GER_Bormann_Sphere_Trade_increase_opinion_low; Executing"
	custom_effect_tooltip = GER_BOR_sphere_trading_increase_relations_tt
	add_to_variable = { BOR_Sphere_Trade_japan_opinion = 1 }
	clamp_variable = { var = BOR_Sphere_Trade_japan_opinion min = 0 max = 10 }
	GER_Bormann_Sphere_Trade_calculate_relationship_effects = yes
}

GER_Bormann_Sphere_Trade_increase_opinion_med = {
	log = "[GetDateText]: [Root.GetName]: GER_Bormann_Sphere_Trade_increase_opinion_med; Executing"
	custom_effect_tooltip = GER_BOR_sphere_trading_increase_relations_tt
	add_to_variable = { BOR_Sphere_Trade_japan_opinion = 2 }
	clamp_variable = { var = BOR_Sphere_Trade_japan_opinion min = 0 max = 10 }
	GER_Bormann_Sphere_Trade_calculate_relationship_effects = yes
}

GER_Bormann_Sphere_Trade_increase_opinion_high = {
	log = "[GetDateText]: [Root.GetName]: GER_Bormann_Sphere_Trade_increase_opinion_high; Executing"
	custom_effect_tooltip = GER_BOR_sphere_trading_increase_relations_tt
	add_to_variable = { BOR_Sphere_Trade_japan_opinion = 3 }
	clamp_variable = { var = BOR_Sphere_Trade_japan_opinion min = 0 max = 10 }
	GER_Bormann_Sphere_Trade_calculate_relationship_effects = yes
}

# Decrease opinion
GER_Bormann_Sphere_Trade_decrease_opinion_low = {
	log = "[GetDateText]: [Root.GetName]: GER_Bormann_Sphere_Trade_decrease_opinion_low; Executing"
	custom_effect_tooltip = GER_BOR_sphere_trading_decrease_relations_tt
	add_to_variable = { BOR_Sphere_Trade_japan_opinion = -1 }
	clamp_variable = { var = BOR_Sphere_Trade_japan_opinion min = 0 max = 10 }
	GER_Bormann_Sphere_Trade_calculate_relationship_effects = yes

	# Failure check
	GER_Bormann_Sphere_Trade_check_for_failure = yes
}

GER_Bormann_Sphere_Trade_decrease_opinion_med = {
	log = "[GetDateText]: [Root.GetName]: GER_Bormann_Sphere_Trade_decrease_opinion_med; Executing"
	custom_effect_tooltip = GER_BOR_sphere_trading_decrease_relations_tt
	add_to_variable = { BOR_Sphere_Trade_japan_opinion = -2 }
	clamp_variable = { var = BOR_Sphere_Trade_japan_opinion min = 0 max = 10 }
	GER_Bormann_Sphere_Trade_calculate_relationship_effects = yes

	# Failure check
	GER_Bormann_Sphere_Trade_check_for_failure = yes
}

GER_Bormann_Sphere_Trade_decrease_opinion_high = {
	log = "[GetDateText]: [Root.GetName]: GER_Bormann_Sphere_Trade_decrease_opinion_high; Executing"
	custom_effect_tooltip = GER_BOR_sphere_trading_decrease_relations_tt
	add_to_variable = { BOR_Sphere_Trade_japan_opinion = -3 }
	clamp_variable = { var = BOR_Sphere_Trade_japan_opinion min = 0 max = 10 }
	GER_Bormann_Sphere_Trade_calculate_relationship_effects = yes

	# Failure check
	GER_Bormann_Sphere_Trade_check_for_failure = yes
}

# Check to see if you fucked up and Japan wants to kick you off
GER_Bormann_Sphere_Trade_check_for_failure = {
	log = "[GetDateText]: [Root.GetName]: GER_Bormann_Sphere_Trade_check_for_failure; Executing"
	if = {
		limit = { check_variable = { BOR_Sphere_Trade_japan_opinion = 0 } }
		log = "[GetDateText]: [Root.GetName]: GER_Bormann_Sphere_Trade_check_for_failure; Failure - Germany about to get kicked"
		hidden_effect = { country_event =  { id = bormann.1818 days = 7 } }
	}
}

# Calculate the effects of the relationship variable into the modifier
GER_Bormann_Sphere_Trade_calculate_relationship_effects = {
	log = "[GetDateText]: [Root.GetName]: GER_Bormann_Sphere_Trade_calculate_relationship_effects; Executing"
	set_variable = { BOR_Sphere_Trade_research_speed_factor = 0 }
	set_variable = { BOR_Sphere_Trade_production_factory_efficiency_gain_factor = 0 }
	set_variable = { BOR_Sphere_Trade_gdp_growth_modifier = 0 }

	# Define new modifiers
	set_variable = { OpinionTradeEffects = BOR_Sphere_Trade_japan_opinion }
	set_variable = { OpinionGDPEffects = BOR_Sphere_Trade_japan_opinion }
	add_to_variable = { OpinionTradeEffects = -2 }
	add_to_variable = { OpinionGDPEffects = -2 }
	if = {
		limit = { check_variable = { BOR_Sphere_Trade_japan_opinion > 2 } }
		multiply_variable = { OpinionTradeEffects = 0.05 }
		divide_variable = { OpinionGDPEffects = 2 }
	}
	else_if = {
		limit = { check_variable = { BOR_Sphere_Trade_japan_opinion < 2 } }
		multiply_variable = { OpinionTradeEffects = 0.1 }
		multiply_variable = { OpinionGDPEffects = 0.25 }
		add_to_variable = { OpinionGDPEffects = 1 }
	}

	if = {
		limit = { check_variable = { OpinionGDPEffects < 1 } }
		add_to_variable = { OpinionGDPEffects = 1 }
	}
	add_to_variable = { OpinionTradeEffects = 1 }

	divide_variable = { OpinionGDPEffects = 2 }

	# Apply new modifiers
	set_variable = { BOR_Sphere_Trade_research_speed_factor = BOR_Sphere_Trade_research_speed_factor_base }
	set_variable = { BOR_Sphere_Trade_production_factory_efficiency_gain_factor = BOR_Sphere_Trade_production_factory_efficiency_gain_factor_base }
	set_variable = { BOR_Sphere_Trade_gdp_growth_modifier = BOR_Sphere_Trade_gdp_growth_modifier_base }
	multiply_variable = { BOR_Sphere_Trade_research_speed_factor = OpinionTradeEffects }
	multiply_variable = { BOR_Sphere_Trade_production_factory_efficiency_gain_factor = OpinionTradeEffects }
	multiply_variable = { BOR_Sphere_Trade_gdp_growth_modifier = OpinionGDPEffects }
}

#############
# Orpo mech #
#############
Orpo_initialize_mechanic = {
	log = "[GetDateText]: [Root.GetName]: Bormann Orpo mechanic initialized"
	unlock_decision_category_tooltip = GER_Espionage_category
	add_dynamic_modifier = { modifier = GER_BOR_Orpo_dynamic_modifier }
	set_country_flag = GER_Bormann_MegaOrpo

	#Variables setting

	set_variable = { RND_training_lvl = 0 }
	set_variable = { RND_budget = 25 }
	set_variable = { RND_investment = 10 }

	set_variable = { RND_research_progress = 0 }
	set_variable = { RND_research_speed_display = 2.5 }

	add_to_array = { GER_global_surveillance = 6 }	#Europe
	add_to_array = { GER_global_surveillance = -1 }	#Russia
	add_to_array = { GER_global_surveillance = -1 }	#East Asia
	add_to_array = { GER_global_surveillance = -1 }	#Middle East
	add_to_array = { GER_global_surveillance = -1 }	#Southeast Asia
	add_to_array = { GER_global_surveillance = -1 }	#Oceania
	add_to_array = { GER_global_surveillance = -1 }	#Africa
	add_to_array = { GER_global_surveillance = -1 }	#North America
	add_to_array = { GER_global_surveillance = -1 }	#Central America
	add_to_array = { GER_global_surveillance = -1 }	#South America

	hidden_effect = { country_event = GER_Espionage.0 }
}