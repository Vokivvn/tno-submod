### HISTORY ###
## 1962
GER_HIST_Generals_62 = {
	log = "[GetDateText]: [This.GetName]: GER_HIST_Generals_62; Executing"

	## Speidel-aligned
		create_field_marshal = { 
			name = "Hans Speidel" 
			picture = "Portrait_Germany_Hans_Spiedel.dds"
			desc = "MILITARY_HANS_SPEIDEL_DESC"
			traits = { trait_cautious organizer thorough_planner skilled_staffer  }
			skill = 4
			attack_skill = 3
			defense_skill = 3
			planning_skill = 4
			logistics_skill = 4
			id = 70
		}
		
		create_corps_commander = { 
			name = "Adolf Heusinger"
			picture = "Portrait_GER_Adolf_Heusinger.dds"
			traits = { career_officer organizer }
			skill = 3
			attack_skill = 2
			defense_skill = 1
			planning_skill = 4
			logistics_skill = 3
			id = 96
		}
		create_corps_commander = { 
			name = "Fritz Bayerlein"
			picture = "Portrait_GER_Fritz_Bayerlein.dds"
			traits = { panzer_leader trait_mountaineer desert_fox }
			skill = 4
			attack_skill = 4
			defense_skill = 3
			planning_skill = 4
			logistics_skill = 2
			id = 101
		}
		create_corps_commander = { 
			name = "Ulrich de Maiziere"
			picture = "Portrait_GER_Ulrich_de_Maiziere.dds"
			traits = { inflexible_strategist infantry_leader  }
			skill = 2
			attack_skill = 2
			defense_skill = 2
			planning_skill = 1
			logistics_skill = 2
			id = 106
		}
		create_corps_commander = { 
			name = "Wolf Graf von Baudissin"
			picture = "Portrait_GER_Wolf_Graf_von_Baudissin.dds"
			traits = { trickster desert_fox }
			skill = 3
			attack_skill = 3
			defense_skill = 2
			planning_skill = 3
			logistics_skill = 2
			id = 108
		}
		create_corps_commander = { 
			name = "Axel von dem Bussche"
			picture = "Portrait_GER_Axel_von_dem_Bussche.dds"
			traits = { trait_cautious trait_engineer trickster }
			skill = 2
			attack_skill = 1
			defense_skill = 2
			planning_skill = 3
			logistics_skill = 1
			id = 110
		}
		create_corps_commander = { 
			name = "Otto Hitzfeld"
			picture = "Portrait_GER_Otto_Hitzfeld.dds"
			traits = { infantry_leader infantry_expert }
			skill = 3
			attack_skill = 3
			defense_skill = 3
			planning_skill = 2
			logistics_skill = 2
			id = 113
		}
		create_corps_commander = { 
			name = "Bern von Baer"
			picture = "Portrait_GER_Bern_von_Baer.dds"
			traits = { commando skirmisher }
			skill = 2
			attack_skill = 2
			defense_skill = 1
			planning_skill = 2
			logistics_skill = 2
			id = 116
		}
		create_corps_commander = { 
			name = "Alfred Zerbel"
			picture = "Portrait_GER_Alfred_Zerbel.dds"
			traits = { panzer_leader winter_specialist }
			skill = 2
			attack_skill = 1
			defense_skill = 1
			planning_skill = 2
			logistics_skill = 3
			id = 117
		}
	#

	## Bormann-aligned
		create_field_marshal = { 
			name = "Wilhelm Burgdorf"
			picture = "Portrait_Germany_Wilhelm_Burgdorf.dds"
			traits = { old_guard organizer infantry_expert }
			skill = 4
			attack_skill = 2
			defense_skill = 2
			planning_skill = 3
			logistics_skill = 3
			id = 403
		}
		create_field_marshal = { 
			name = "Claus von Stauffenberg"
			picture = "Portrait_Germany_Claus_von_Stauffenberg.dds"
			traits = { politically_connected war_hero panzer_leader desert_fox }
			skill = 4
			attack_skill = 3
			defense_skill = 4
			planning_skill = 4
			logistics_skill = 2
			id = 404
		}
		create_field_marshal = { 
			name = "Walther Wenck"
			picture = "Portrait_GER_Walther_Wenck.dds"
			traits = { brilliant_strategist unyielding_defender trickster expert_improviser }
			skill = 3
			attack_skill = 2
			defense_skill = 3
			planning_skill = 3
			logistics_skill = 2
			id = 107
		}

		create_corps_commander = { 
			name = "Albert Schnez"
			picture = "Portrait_GER_Albert_Schnez.dds"
			traits = { trait_reckless trickster guerilla_fighter }
			skill = 3
			attack_skill = 4
			defense_skill = 2
			planning_skill = 1
			logistics_skill = 3
			id = 71 
		}
		create_corps_commander = {
			name = "Heinrich Trettner"
			picture = "Portrait_GER_Heinrich_Trettner.dds"
			traits = { war_hero commando paratrooper }
			skill = 3
			attack_skill = 3
			defense_skill = 2
			planning_skill = 3
			logistics_skill = 2
			id = 73 
		}
		create_corps_commander = { 
			name = "Gunther Smend"
			picture = "Portrait_GER_Gunther_Smend.dds"
			traits = { bearer_of_artillery hill_fighter }
			skill = 2
			attack_skill = 2
			defense_skill = 1
			planning_skill = 2
			logistics_skill = 2
			id = 84
		}
		create_corps_commander = { 
			name = "Hans Krebs"
			picture = "Portrait_GER_Hans_Krebs.dds"
			traits = { career_officer infantry_leader }
			skill = 3
			attack_skill = 4
			defense_skill = 3
			planning_skill = 1
			logistics_skill = 2
			id = 103
		}
		create_corps_commander = { 
			name = "Joachim Sadrozinski"
			picture = "Portrait_GER_Joachim_Sadrozinski.dds"
			traits = { career_officer organizer skilled_staffer }
			skill = 2
			attack_skill = 1
			defense_skill = 2
			planning_skill = 2
			logistics_skill = 2
			id = 88
		}
		create_corps_commander = { 
			name = "Karl-Adolf Hollidt"
			picture = "Portrait_GER_Karl_Adolf_Hollidt.dds"
			traits = { old_guard infantry_leader infantry_expert }
			skill = 3
			attack_skill = 3
			defense_skill = 4
			planning_skill = 2
			logistics_skill = 4
			id = 89
		}
		create_corps_commander = { 
			name = "Georg von Boeslager"
			picture = "Portrait_GER_Georg_von_Boeslager.dds"
			traits = { harsh_leader urban_assault_specialist }
			skill = 2
			attack_skill = 2
			defense_skill = 1
			planning_skill = 3
			logistics_skill = 1
			id = 78 
		}
	#

	## Goering-aligned
		create_field_marshal = { 
			name = "Ferdinand Schörner"
			picture = "Portrait_Germany_Ferdinand_Schorner.dds"
			traits = { war_hero harsh_leader organizer logistics_wizard }
			desc = "GENERAL_FERDINAND_SCHORNER_DESC"
			skill = 4
			attack_skill = 4
			defense_skill = 3
			planning_skill = 4
			logistics_skill = 2
			id = 122
		}
		create_field_marshal = { 
			name = "Johann von Kielmansegg"
			picture = "Portrait_GER_Johann_von_Kielmansegg.dds"
			traits = { career_officer infantry_leader offensive_doctrine }
			skill = 3
			attack_skill = 3
			defense_skill = 2
			planning_skill = 3
			logistics_skill = 2
			id = 75 
		}
		create_field_marshal = { 
			name = "Eduard Wagner"
			desc = "GENERAL_EDUARD_WAGNER"
			picture = "Portrait_GER_Eduard_Wagner.dds"
			traits = { old_guard organizer logistics_wizard thorough_planner }
			skill = 4
			attack_skill = 2
			defense_skill = 2
			planning_skill = 3
			logistics_skill = 5
			id = 81
		}

		create_corps_commander = { 
			name = "Friedrich August Freiherr von der Heydte"
			picture = "Portrait_GER_Friedrich_August_Freiherr_von_der_Heydte.dds"
			traits = { media_personality commando paratrooper }
			skill = 3
			attack_skill = 3
			defense_skill = 2
			planning_skill = 3
			logistics_skill = 2
			id = 98
		}
		create_corps_commander = { 
			name = "Friedrich Foertsch"
			picture = "Portrait_GER_Friedrich_Foertsch.dds"
			traits = { old_guard infantry_leader winter_specialist }
			skill = 3
			attack_skill = 2
			defense_skill = 3
			planning_skill = 2
			logistics_skill = 3
			id = 99
		}
		create_corps_commander = { 
			name = "Gerhard von Schwerin"
			picture = "Portrait_GER_Gerhard_von_Schwerin.dds"
			traits = { commando desert_fox winter_specialist }
			skill = 4
			attack_skill = 4
			defense_skill = 3
			planning_skill = 2
			logistics_skill = 4
			id = 102
		}
		create_corps_commander = { 
			name = "Heinz-Georg Lemm"
			picture = "Portrait_GER_Heinz_Georg_Lemm.dds"
			traits = { panzer_leader trickster }
			skill = 2
			attack_skill = 3
			defense_skill = 2
			planning_skill = 1
			logistics_skill = 1
			id = 74 
		}
		create_corps_commander = { 
			name = "Leo Hepp"
			picture = "Portrait_GER_Leo_Hepp.dds"
			traits = { organizer hill_fighter }
			skill = 2
			attack_skill = 2
			defense_skill = 1
			planning_skill = 1
			logistics_skill = 3
			id = 104
		}
		create_corps_commander = { 
			name = "Alfred Becker"
			picture = "Portrait_GER_Alfred_Becker.dds"
			traits = { bearer_of_artillery trait_engineer }
			skill = 2
			attack_skill = 2
			defense_skill = 1
			planning_skill = 2
			logistics_skill = 2
			id = 118
		}
		create_corps_commander = { 
			name = "Erich Bärenfänger"
			picture = "Portrait_GER_Erich_Barenfanger.dds"
			traits = { trait_reckless urban_assault_specialist }
			skill = 2
			attack_skill = 1
			defense_skill = 3
			planning_skill = 2
			logistics_skill = 1
			id = 119
		}
		create_corps_commander = { 
			name = "Hans-Joachim Herrmann"
			picture = "Portrait_GER_Hans_Joachim_Herrmann.dds"
			traits = { politically_connected commando camouflage_expert }
			skill = 2
			attack_skill = 2
			defense_skill = 2
			planning_skill = 2
			logistics_skill = 1
			id = 120
		}
		create_corps_commander = { 
			name = "Harald von Hirschfeld"
			picture = "Portrait_GER_Harald_von_Hirschfeld.dds"
			traits = { harsh_leader trait_mountaineer }
			skill = 2
			attack_skill = 2
			defense_skill = 2
			planning_skill = 2
			logistics_skill = 3
			id = 1110
		}
		create_corps_commander = { 
			name = "Otto Ernst Remer"
			picture = "Portrait_GER_Otto_Ernst_Remer.dds"
			traits = { infantry_leader urban_assault_specialist }
			desc = "GENERAL_OTTO_REMER_DESC"
			skill = 3
			attack_skill = 2
			defense_skill = 3
			planning_skill = 2
			logistics_skill = 2
			id = 1120
		}
		create_corps_commander = { 
			name = "Theodor Tolsdorff"
			picture = "Portrait_GER_Theodor_Tolsdorff.dds"
			traits = { trait_reckless panzer_leader winter_specialist }
			skill = 4
			attack_skill = 3
			defense_skill = 1
			planning_skill = 2
			logistics_skill = 2
			id = 1140
		}
		create_corps_commander = { 
			name = "Werner Mummert"
			picture = "Portrait_GER_Werner_Mummert.dds"
			traits = { trait_reckless panzer_leader trickster }
			skill = 3
			attack_skill = 2
			defense_skill = 2
			planning_skill = 3
			logistics_skill = 1
			id = 1150
		}

	#

	## Speer-aligned
		create_field_marshal = { 
			name = "Rudolf-Christoph Freiherr von Gersdorff"
			picture = "Portrait_GER_Rudolf_Christoph_Freiherr_von_Gersdorff.dds"
			traits = { career_officer trait_engineer trickster  }
			skill = 2
			attack_skill = 2
			defense_skill = 1
			planning_skill = 3
			logistics_skill = 3
			id = 123
		}
		create_field_marshal = {
			name = "Henning von Tresckow"
			picture = "Portrait_Germany_Henning_von_Tresckow.dds"
			desc = "MILITARY_HENNING_VON_TRESCKOW_DESC"
			traits = { old_guard politically_connected thorough_planner }
			skill = 4
			attack_skill = 2
			defense_skill = 3
			planning_skill = 1
			logistics_skill = 2
			id = 150
		}
	
		create_corps_commander = { 
			name = "Alexis von Roenne"
			picture = "Portrait_GER_Alexis_von_Roenne.dds"
			traits = { politically_connected organizer trickster  }
			skill = 2
			attack_skill = 1
			defense_skill = 2
			planning_skill = 4
			logistics_skill = 2
			id = 80
		}
		create_corps_commander = { 
			name = "Ewald-Heinrich von Kleist-Schmenzin"
			picture = "Portrait_GER_Ewald_Heinrich_von_Kleist_Schmenzin.dds"
			traits = { politically_connected panzer_leader }
			skill = 2
			attack_skill = 2
			defense_skill = 2
			planning_skill = 1
			logistics_skill = 3
			id = 82
		}
		create_corps_commander = { 
			name = "Hans Ulrich von Oertzen"
			picture = "Portrait_GER_Hans_Ulrich_von_Oertzen.dds"
			traits = { trickster guerilla_fighter }
			skill = 2
			attack_skill = 2
			defense_skill = 1
			planning_skill = 3
			logistics_skill = 1
			id = 85
		}
		create_corps_commander = { 
			name = "Philipp von Boeselager"
			picture = "Portrait_GER_Philipp_von_Boeselager.dds"
			traits = { trait_cautious ranger  }
			skill = 2
			attack_skill = 2
			defense_skill = 1
			planning_skill = 2
			logistics_skill = 2
			id = 91
		}
		create_corps_commander = { 
			name = "Carl Szokoll"
			picture = "Portrait_GER_Carl_Szokoll.dds"
			traits = { infantry_leader urban_assault_specialist }
			skill = 1
			attack_skill = 1
			defense_skill = 1
			planning_skill = 2
			logistics_skill = 3
			id = 97
		}
		create_corps_commander = { 
			name = "Wessel Freytag von Loringhoven"
			picture = "Portrait_GER_Wessel_Freytag_von_Loringhoven.dds"
			traits = { trait_cautious infantry_leader }
			skill = 2
			attack_skill = 2
			defense_skill = 2
			planning_skill = 1
			logistics_skill = 1
			id = 124
		}
		create_corps_commander = { 
			name = "Hellmuth Stieff"
			picture = "Portrait_GER_Hellmuth_Stieff.dds"
			traits = { organizer infantry_leader }
			skill = 3
			attack_skill = 3
			defense_skill = 2
			planning_skill = 4
			logistics_skill = 2
			id = 126
		}
		create_corps_commander = { 
			name = "Friedrich Klausing"
			picture = "Portrait_GER_Friedrich_Klausing.dds"
			traits = { winter_specialist urban_assault_specialist }
			skill = 3
			attack_skill = 3
			defense_skill = 2
			planning_skill = 1
			logistics_skill = 2
			id = 127
		}
	#

	## Heydrich-aligned
		create_field_marshal = { 
			name = "Karl Hanke"
			picture = "Portrait_Germany_Karl_Hanke.dds"
			traits = { old_guard panzer_leader defensive_doctrine }
			skill = 2
			attack_skill = 2
			defense_skill = 1
			planning_skill = 3
			logistics_skill = 1
			id = 76 
		}
		create_field_marshal = { 
			name = "Herbert Otto Gille"
			picture = "Portrait_GER_Herbert_Otto_Gille.dds"
			traits = { war_hero aggressive_assaulter panzer_leader winter_specialist }
			skill = 4
			attack_skill = 4
			defense_skill = 3
			planning_skill = 2
			logistics_skill = 4
			id = 121
		}

		create_corps_commander = { 
			name = "Heinz Harmel"
			picture = "Portrait_GER_Heinz_Harmel.dds"
			traits = { inflexible_strategist ranger urban_assault_specialist }
			skill = 2
			attack_skill = 2
			defense_skill = 2
			planning_skill = 2
			logistics_skill = 1
			id = 86
		}
		create_corps_commander = { 
			name = "Hugo Kraas"
			picture = "Portrait_GER_Hugo_Kraas.dds"
			traits = { commando hill_fighter }
			skill = 3
			attack_skill = 2
			defense_skill = 2
			planning_skill = 3
			logistics_skill = 3
			id = 87
		}
		create_corps_commander = { 
			name = "Otto Kumm"
			picture = "Portrait_GER_Otto_Kumm.dds"
			traits = { trait_reckless infantry_leader }
			skill = 3
			attack_skill = 3
			defense_skill = 3
			planning_skill = 2
			logistics_skill = 2
			id = 90
		}
		create_corps_commander = { 
			name = "Ernst Barkmann"
			picture = "Portrait_GER_Enst_Bakmann.dds"
			traits = { brilliant_strategist panzer_leader }
			skill = 2
			attack_skill = 3
			defense_skill = 2
			planning_skill = 1
			logistics_skill = 1
			id = 92
		}
		create_corps_commander = { 
			name = "Erich Naumann"
			picture = "Portrait_GER_Erich_Naumann.dds"
			traits = { trickster organizer }
			skill = 1
			attack_skill = 1
			defense_skill = 1
			planning_skill = 1
			logistics_skill = 1
			id = 93
		}
		create_corps_commander = { 
			name = "Georg Bochmann"
			picture = "Portrait_GER_Georg_Bochmann.dds"
			traits = { panzer_leader combined_arms_expert winter_specialist }
			skill = 3
			attack_skill = 2
			defense_skill = 2
			planning_skill = 3
			logistics_skill = 3
			id = 94
		}
		create_corps_commander = { 
			name = "Hermann Priess"
			picture = "Portrait_GER_Hermann_Priess.dds"
			traits = { career_officer panzer_leader trickster }
			skill = 3
			attack_skill = 3
			defense_skill = 2
			planning_skill = 2
			logistics_skill = 3
			id = 95
		}
		create_corps_commander = { 
			name = "Sylvester Stadler"
			picture = "Portrait_GER_Sylvester_Stadler.dds"
			traits = { infantry_leader ranger winter_specialist }
			skill = 3
			attack_skill = 4
			defense_skill = 2
			planning_skill = 1
			logistics_skill = 3
			id = 105
		}
	#

	log = "[GetDateText]: [This.GetName]: GER_HIST_Generals_62; Completed execution."
}
GER_HIST_Admirals_62 = {
	log = "[GetDateText]: [This.GetName]: GER_HIST_Admirals_62; Executing"

	## Donitz
		create_navy_leader = {
			name = "Karl Dönitz"
			picture =  "Portrait_GER_Karl_Donitz.dds"
			traits = { seawolf superior_tactician blockade_runner }

			skill = 8
			attack_skill = 8
			defense_skill = 4
			maneuvering_skill = 8
			coordination_skill = 8

			id = 193
		}

	## Speidel-aligned
		create_navy_leader = {
			name = "Erich Topp"
			picture = "Portrait_GER_Erich_Topp.dds"
			traits = { seawolf spotter }

			skill = 4
			attack_skill = 1
			defense_skill = 1
			maneuvering_skill = 1
			coordination_skill = 1

			id = 128
		}
		create_navy_leader = {
			name = "Horst von Schroeter"
			picture = "Portrait_GER_Horst_von_Schroeter.dds"
			traits = { seawolf }

			skill = 3
			attack_skill = 1
			defense_skill = 1
			maneuvering_skill = 1
			coordination_skill = 1
			
			id = 129
		}
		create_navy_leader = {
			name = "Otto Ites"
			picture = "Portrait_GER_Otto_Ites.dds"
			traits = { spotter }

			skill = 2
			attack_skill = 1
			defense_skill = 1
			maneuvering_skill = 1
			coordination_skill = 1

			id = 147
		}
		create_navy_leader = {
			name = "Hans-Rudolf Rösing"
			picture = "Portrait_GER_Hans_Rudolf_Rosing.dds"
			traits = { seawolf superior_tactician }
			
			skill = 3
			attack_skill = 1
			defense_skill = 1
			maneuvering_skill = 1
			coordination_skill = 1

			id = 148
		}
		create_navy_leader = {
			name = "Robert Gysae"
			picture = "Portrait_GER_Robert_Gysae.dds"
			traits = { seawolf }

			skill = 2
			attack_skill = 1
			defense_skill = 1
			maneuvering_skill = 1
			coordination_skill = 1

			id = 149
		}
	#

	## Bormann-aligned
		create_navy_leader = {
			name = "Hans-Georg von Friedeburg"
			picture = "Portrait_GER_Hans_Georg_von_Freidburg.dds"
			traits = { seawolf superior_tactician }
			
			skill = 4
			attack_skill = 1
			defense_skill = 1
			maneuvering_skill = 1
			coordination_skill = 1

			id = 134
		}
		create_navy_leader = {
			name = "Helmuth Brinkmann"
			picture = "Portrait_GER_Helmuth_Brinkmann.dds"
			traits = { spotter blockade_runner }

			skill = 3
			attack_skill = 1
			defense_skill = 1
			maneuvering_skill = 1
			coordination_skill = 1

			id = 135
		}
		create_navy_leader = {
			name = "Wilhelm Meendsen-Bohlken"
			picture = "Portrait_GER_Wilhelm_Meendsen_Bohlken.dds"
			traits = { ironside }

			skill = 3
			attack_skill = 1
			defense_skill = 1
			maneuvering_skill = 1
			coordination_skill = 1
			
			id = 136
		}
		create_navy_leader = {
			name = "Otto Kretschmer"
			picture = "Portrait_GER_Otto_Kretschmer.dds"
			traits = { seawolf spotter superior_tactician }

			skill = 5
			attack_skill = 1
			defense_skill = 1
			maneuvering_skill = 1
			coordination_skill = 1

			id = 137
		}
		create_navy_leader = {
			name = "Herbert Schultze"
			picture = "Portrait_GER_Herbert_Schultze.dds"
			traits = { seawolf }

			skill = 2
			attack_skill = 1
			defense_skill = 1
			maneuvering_skill = 1
			coordination_skill = 1
			
			id = 138
		}
	#

	## Goering-aligned
		create_navy_leader = {
			name = "Otto von Bülow"
			picture = "Portrait_Germany_Otto_von_Bulow.dds"
			traits = { seawolf }
		
			skill = 2
			attack_skill = 1
			defense_skill = 1
			maneuvering_skill = 1
			coordination_skill = 1
			
			id = 79 
		}
		create_navy_leader = {
			name = "Armin Zimmermann"
			picture = "Portrait_GER_Armin_Zimmermann.dds"
			traits = { fly_swatter }
		
			skill = 3
			attack_skill = 1
			defense_skill = 1
			maneuvering_skill = 1
			coordination_skill = 1
			
			id = 109
		}
		create_navy_leader = {
			name = "Karl-Jesko von Puttkamer"
			picture = "Portrait_GER_Karl_Jesko_von_Puttkamer.dds"
			traits = { spotter superior_tactician }
			desc = "ADMIRAL_KARL_JESKO_VON_PUTTKAMER"
			skill = 2
			attack_skill = 1
			defense_skill = 1
			maneuvering_skill = 1
			coordination_skill = 1
			
			id = 139
		}
		create_navy_leader = {
			name = "Karl-Friedrich Merten"
			picture = "Portrait_GER_Karl_Friedrich_Merten.dds"
			traits = { seawolf }
		
			skill = 3
			attack_skill = 1
			defense_skill = 1
			maneuvering_skill = 1
			coordination_skill = 1
			
			id = 140
		}
		create_navy_leader = {
			name = "Heinrich Lehmann-Willenbrock"
			picture = "Portrait_GER_Heinrich_Lehmann_Willenbrock.dds"
			traits = { seawolf spotter }
		
			skill = 4
			attack_skill = 1
			defense_skill = 1
			maneuvering_skill = 1
			coordination_skill = 1
			
			id = 141
		}
		create_navy_leader = {
			name = "Bernhard Rogge"
   			picture = "Portrait_GER_Bernhard_Rogge.dds"
   			traits = { old_guard_navy superior_tactician }
			skill = 3
			attack_skill = 1
			defense_skill = 1
			maneuvering_skill = 1
			coordination_skill = 1
			
			id = 154
		}
		create_navy_leader = {
			name = "Heinz Kühnle"
			picture = "Portrait_GER_Heinz_Kuhnle.dds"
			traits = { spotter }
			skill = 2
			attack_skill = 1
			defense_skill = 1
			maneuvering_skill = 1
			coordination_skill = 1
	
			id = 155
		}
	#

	## Speer-aligned
		create_navy_leader = {
			name = "Günter Luther"
			picture = "Portrait_GER_Gunter_Luther.dds"
			traits = { fly_swatter air_controller }
		
			skill = 4
			attack_skill = 1
			defense_skill = 1
			maneuvering_skill = 1
			coordination_skill = 1
			
			id = 69
		}
		create_navy_leader = {
			name = "Wilhelm Ehm"
			picture = "Portrait_GER_Wilhelm_Ehm.dds"
			traits = { superior_tactician }
		
			skill = 2
			attack_skill = 1
			defense_skill = 1
			maneuvering_skill = 1
			coordination_skill = 1
			
			id = 131
		}
		create_navy_leader = {
			name = "Hellmuth Heye"
			picture = "Portrait_GER_Hellmuth_Heye.dds"
			traits = { old_guard_navy blockade_runner }
		
			skill = 2
			attack_skill = 1
			defense_skill = 1
			maneuvering_skill = 1
			coordination_skill = 1
			
			id = 132
		}
		create_navy_leader = {
			name = "Gerhard Wagner"
			picture = "Portrait_GER_Gerhard_Wagner.dds"
			traits = { spotter blockade_runner }
		
			skill = 3
			attack_skill = 1
			defense_skill = 1
			maneuvering_skill = 1
			coordination_skill = 1
			
			id = 133
		}
		create_navy_leader = {
			name = "Friedrich Guggenberger"
			picture = "Portrait_GER_Friedrich_Guggenberger.dds"
			traits = { seawolf spotter }
		
			skill = 4
			attack_skill = 1
			defense_skill = 1
			maneuvering_skill = 1
			coordination_skill = 1
			
			id = 130
		}
	#

	## Heydrich-aligned
		create_navy_leader = {
			name = "Günther Prien"
			picture = "Portrait_GER_Gunther_Prien.dds"
			traits = { seawolf }
		
			skill = 3
			attack_skill = 1
			defense_skill = 1
			maneuvering_skill = 1
			coordination_skill = 1
			
			id = 142
		}
		create_navy_leader = {
			name = "Theodor Hoffmann"
			picture = "Portrait_GER_Theodor_Hoffmann.dds"
			traits = { ironside }
		
			skill = 2
			attack_skill = 1
			defense_skill = 1
			maneuvering_skill = 1
			coordination_skill = 1
			
			id = 143
		}
		create_navy_leader = {
			name = "Friedrich Ruge"
			picture = "Portrait_GER_Friedrich_Ruge.dds"
			traits = { old_guard_navy spotter }
			skill = 3
			attack_skill = 1
			defense_skill = 1
			maneuvering_skill = 1
			coordination_skill = 1
			id = 144
		}
		create_navy_leader = {
			name = "Wilhelm Meentzen"
			picture = "Portrait_GER_Wilhelm_Meentzen.dds"
			traits = { blockade_runner }
		
			skill = 2
			attack_skill = 1
			defense_skill = 1
			maneuvering_skill = 1
			coordination_skill = 1
			
			id = 145
		}
		create_navy_leader = {
			name = "Ansgar Bethge"
			picture = "Portrait_GER_Ansgar_Bethge.dds"
			traits = { spotter }
		
			skill = 2
			attack_skill = 1
			defense_skill = 1
			maneuvering_skill = 1
			coordination_skill = 1
			
			id = 146
		}
	#

	log = "[GetDateText]: [This.GetName]: GER_HIST_Admirals_62; Completed execution."
}
GER_HIST_Production_Equipment_62 = {
	log = "[GetDateText]: [This.GetName]: GER_HIST_Production_Equipment_62; Executing"


	### Production

	create_equipment_variant = {
		name = "Adler Class"
		type = ship_hull_carrier_3
		name_group = GER_CV_HISTORICAL
		parent_version = 0
		modules = {
			fixed_ship_deck_slot_1 = ship_deck_space
			fixed_ship_deck_slot_2 = ship_deck_space
			fixed_ship_anti_air_slot = ship_anti_air_2
			fixed_ship_radar_slot = ship_radar_2
			fixed_ship_engine_slot = carrier_ship_engine_3
			fixed_ship_secondaries_slot = ship_secondaries_2
			front_1_custom_slot = ship_armor_carrier_deck
			mid_1_custom_slot = ship_deck_space
			mid_2_custom_slot = ship_deck_space
		}
	}
	create_equipment_variant = {
		name = "Adler Class"
		type = carrier_3
		parent_version = 0
	}
		# Navy
		if = {
			limit = { has_dlc = "Man the Guns" }
			add_equipment_production = {
				equipment = {
					type = ship_hull_carrier_3
					creator = "GER" 
					version_name = "Adler Class"
				}
				requested_factories = 5
				progress = 0.98
				amount = 1
			}
			else = {
				add_equipment_production = {
					equipment = {
						type = carrier_3
						creator = "GER" 
						version_name = "Adler Class"
					}
					requested_factories = 5
					progress = 0.98
					amount = 1
				}
			}
		}

		## Infantry
			add_equipment_production = {
				equipment = {
					type = infantry_equipment_2
					creator = "GER"
				}
				requested_factories = 12
				progress = 0.3
				efficiency = 50
			}
			add_equipment_production = {
				equipment = {
					type = support_equipment_1
					creator = "GER"
				}
				requested_factories = 8
				progress = 0.3
				efficiency = 50
			}
			add_equipment_production = {
				equipment = {
					type = artillery_equipment_3
					creator = "GER"
				}
				requested_factories = 6
				progress = 0.6
				efficiency = 50
			}
			add_equipment_production = {
				equipment = {
					type = anti_tank_equipment_0
					creator = "GER"
				}
				requested_factories = 4
				progress = 0.2
				efficiency = 50
			}
		#
	
		## Motorized, Mechanized & Tanks
			add_equipment_production = {
				equipment = {
					type = motorized_equipment_1
					creator = "GER"
				}
				requested_factories = 3
				progress = 0.1
				efficiency = 50
			}
			add_equipment_production = {
				equipment = {
					type = MBT_equipment_2
					creator = "GER"
				}
				requested_factories = 5
				progress = 0.1
				efficiency = 50
			}
		#
		
		## Aircraft
			add_equipment_production = {
				equipment = {
					type = jet_fighter_equipment_1
					creator = "GER"
				}
				requested_factories = 5
				progress = 0.1
				efficiency = 50
			}
			add_equipment_production = {
				equipment = {
					type = jet_interceptor_equipment_1
					creator = "GER"
				}
				requested_factories = 3
				progress = 0.1
				efficiency = 50
			}
			add_equipment_production = {
				equipment = {
					type = attack_helicopter_equipment_1
					creator = "GER"
				}
				requested_factories = 5
				progress = 0.1
				efficiency = 50
			}
		#
	#

	### Equipment
		## Missiles
			add_equipment_to_stockpile = {
				type = ICBM_equipment
				amount = 700
				producer = GER
			}
			add_equipment_to_stockpile = {
				type = MRBM_equipment
				amount = 600
				producer = GER
			}
			add_equipment_to_stockpile = {
				type = SRBM_equipment
				amount = 100
				producer = GER
			}
		#
	#

	log = "[GetDateText]: [This.GetName]: GER_HIST_Production_Equipment_62; Completed execution."
}

### GCW EFFECTS ###

GER_GCW_select_victor = { #Used only in a purely AI GCW if the war has run on for too long

	#Meant to operate using a points based system, to attempt to gauge the prospective victor.

	#Speer
	if = {
		limit = { country_exists = SGR }
		SGR = {
			set_variable = { GCW_manpower = num_divisions }
			set_variable = { GCW_equipment = num_equipment_in_armies_k@infantry_equipment }
			set_variable = { GCW_surrender_progress = surrender_progress }
		}
	}
	#Bormann
	if = {
		limit = { country_exists = BGR }
		BGR = {
			set_variable = { GCW_manpower = num_divisions }
			set_variable = { GCW_equipment = num_equipment_in_armies_k@infantry_equipment }
			set_variable = { GCW_surrender_progress = surrender_progress }
		}
	}
	#Göring - Locked as goering is too disruptive for anyone not playing germany
	#if = {
	#	limit = { country_exists = GGR }
	#	GGR = {
	#		set_variable = { GCW_manpower = num_divisions }
	#		set_variable = { GCW_equipment = num_equipment_in_armies_k@infantry_equipment }
	#		set_variable = { GCW_surrender_progress = surrender_progress }
	#	}
	#}

	#Point distribution

	#Fielded divisions
	if = {
		limit = {
			check_variable = { SGR.GCW_manpower > BGR.GCW_manpower }
			check_variable = { SGR.GCW_manpower > GGR.GCW_manpower }
		}
		add_to_variable = { SGR_points = 1 }
		else_if = {
			limit = {
				check_variable = { GGR.GCW_manpower > SGR.GCW_manpower }
				check_variable = { GGR.GCW_manpower > BGR.GCW_manpower }
			}
			add_to_variable = { GGR_points = 1 }
		}
		else = {
			add_to_variable = { BGR_points = 1 }
		}
	}

	#Equipment
	if = {
		limit = {
			check_variable = { SGR.GCW_equipment > BGR.GCW_equipment }
			check_variable = { SGR.GCW_equipment > GGR.GCW_equipment }
		}
		add_to_variable = { SGR_points = 1 }
		else_if = {
			limit = {
				check_variable = { GGR.GCW_equipment > SGR.GCW_equipment }
				check_variable = { GGR.GCW_equipment > BGR.GCW_equipment }
			}
			add_to_variable = { GGR_points = 1 }
		}
		else = {
			add_to_variable = { BGR_points = 1 }
		}
	}

	#Surrender progress
	if = {
		limit = {
			check_variable = { SGR.GCW_surrender_progress < BGR.GCW_surrender_progress }
			check_variable = { SGR.GCW_surrender_progress < GGR.GCW_surrender_progress }
		}
		add_to_variable = { SGR_points = 1 }
		else_if = {
			limit = {
				check_variable = { GGR.GCW_surrender_progress < SGR.GCW_surrender_progress }
				check_variable = { GGR.GCW_surrender_progress < BGR.GCW_surrender_progress }
			}
			add_to_variable = { GGR_points = 1 }
		}
		else = {
			add_to_variable = { BGR_points = 1 }
		}
	}

	#Adding Führer selection boni

	if = {
		limit = {
			GER = { has_country_flag = bormann_for_germany }
		}
		add_to_variable = { BGR_points = 2 }

		else_if = {
			limit = { 
				GER = { has_country_flag = goring_for_germany }
			}
			add_to_variable = { GGR_points = 2 }
		}

		else_if = {
			limit = {
				GER = { has_country_flag = speer_for_germany }
			}
			add_to_variable = { SGR_points = 2 }
		}
	}

	#Choosing the victor
	if = {
		limit = {
			check_variable = { SGR_points > GGR_points }
			check_variable = { SGR_points > BGR_points }
		}
		SGR = { add_ideas = GCW_hidden_holy_shit_win_already }
		BGR = { add_ideas = BOR_out_of_time }
		GGR = { add_ideas = BOR_out_of_time }
		else_if = {
			limit = {
				check_variable = { GGR_points > SGR_points }
				check_variable = { GGR_points > BGR_points }
			}
			GGR = { add_ideas = GCW_hidden_holy_shit_win_already }
			BGR = { add_ideas = BOR_out_of_time }
			SGR = { add_ideas = BOR_out_of_time }
		}
		else = {
			BGR = { add_ideas = GCW_hidden_holy_shit_win_already }
			SGR = { add_ideas = BOR_out_of_time }
			GGR = { add_ideas = BOR_out_of_time }
		}
	}
}


GER_GCW_begin = {
	log = "[GetDateText]: [This.GetName]: GER_GCW_begin; Executing"

	country_event = { id = gcw_dbg.20 days = 500 }
	
	## Ownership & Cores Getting set up
	# Speer
	every_owned_state = {
		limit = { is_SGR_state = yes }
		#set_demilitarized_zone = no
		SGR = { 
			transfer_state = PREV
			add_state_core = PREV
		}
	}
	SGR = {
		add_to_array = { global.GCW_contenders = THIS }
		inherit_technology = PREV
		load_oob = SGR
		load_oob = "SGR_mtg_navy"
		set_war_support = GER.GER_Speer_Influence
		set_variable = { GCW_legitimacy = GER.GER_Speer_Influence }
		GCW_intialise_legitimacy = yes
		
		if = {
			limit = {
				check_variable = { GER.GCW_Speer_infantry_weapons > 0 }
			}
			add_equipment_to_stockpile = {
				type = infantry_equipment
				amount = GER.GCW_Speer_infantry_weapons
				producer = GER
			}
		}
		if = {
			limit = {
				check_variable = { GER.GCW_Speer_heer_units > 0 }
			}
			hidden_effect = {
				capital_scope = {
					create_unit = {
						division = "division_template = \"Infanterie-Division\" start_experience_factor = 0.1 start_equipment_factor = 0.3"
						owner = PREV
						count =  GER.GCW_Speer_heer_units
					}
				}
			}
		}
		if = {
			limit = {
				check_variable = { GER.GCW_Speer_civs_factory > 0 }
			}
			add_offsite_building = {
				type = industrial_complex
				level = GER.GCW_Speer_civs_factory
			}
		}
		if = {
			limit = {
				check_variable = { GER.GCW_Speer_arms_factory > 0 }
			}
			add_offsite_building = {
				type = arms_factory
				level = GER.GCW_Speer_arms_factory
			}
		}

		if = {
			limit = { GER = { has_country_flag = speer_for_germany } }
			change_tag_from = GER
			SGR = { add_ideas = GER_hitlers_chosen_successor }
		}
	}

	# Goering
	every_owned_state = {
		limit = { is_GGR_state = yes }
		#set_demilitarized_zone = no
		GGR = {
			transfer_state = PREV
			add_state_core = PREV
		}
	}
	GGR = {
		country_event = {
			id = goering_successor.14 days = 6
		}
		country_event = {
			id = goering_successor.12 days = 10
		}
		country_event = {
			id = goering_successor.11 days = 5
		}
		country_event = {
			id = goering_successor.10 days = 12
		}
		add_to_array = { global.GCW_contenders = THIS }
		inherit_technology = PREV
		load_oob = GGR
		load_oob = "GGR_mtg_navy"
		set_war_support = GER.GER_Goring_Influence
		set_variable = { GCW_legitimacy = GER.GER_Goring_Influence }
		GCW_intialise_legitimacy = yes

		if = {
			limit = {
				check_variable = { GER.GCW_Goring_infantry_weapons > 0 }
			}
			add_equipment_to_stockpile = {
				type = infantry_equipment
				amount = GER.GCW_Goring_infantry_weapons
				producer = GER
			}
		}
		if = {
			limit = {
				check_variable = { GER.GCW_Goring_heer_units > 0 }
			}
			hidden_effect = {
				capital_scope = {
					create_unit = {
						division = "division_template = \"Infanterie-Division\" start_experience_factor = 0.1 start_equipment_factor = 0.3"
						owner = PREV
						count =  GER.GCW_Goring_heer_units
					}
				}
			}
		}
		if = {
			limit = {
				check_variable = { GER.GCW_Goring_civs_factory > 0 }
			}
			add_offsite_building = {
				type = industrial_complex
				level = GER.GCW_Goring_civs_factory
			}
		}
		if = {
			limit = {
				check_variable = { GER.GCW_Goring_arms_factory > 0 }
			}
			add_offsite_building = {
				type = arms_factory
				level = GER.GCW_Goring_arms_factory
			}
		}

		if = {
			limit = { GER = { has_country_flag = goring_for_germany } }
			change_tag_from = GER
			GGR = { add_ideas = GER_hitlers_chosen_successor }
		}
	}

	# Bormann
	every_owned_state = {
		limit = { is_BGR_state = yes }
		#set_demilitarized_zone = no
		BGR = {
			transfer_state = PREV
			add_state_core = PREV
		}
	}
	BGR = {
		add_to_array = { global.GCW_contenders = THIS }
		inherit_technology = PREV
		load_oob = BGR
		set_war_support = GER.GER_Bormann_Influence
		set_variable = { GCW_legitimacy = GER.GER_Bormann_Influence }
		GCW_intialise_legitimacy = yes

		if = {
			limit = {
				check_variable = { GER.GCW_Bormann_infantry_weapons > 0 }
			}
			add_equipment_to_stockpile = {
				type = infantry_equipment
				amount = GER.GCW_Bormann_infantry_weapons
				producer = GER
			}
		}
		if = {
			limit = {
				check_variable = { GER.GCW_Bormann_heer_units > 0 }
			}
			hidden_effect = {
				capital_scope = {
					create_unit = {
						division = "division_template = \"Infanterie-Division\" start_experience_factor = 0.1 start_equipment_factor = 0.3"
						owner = PREV
						count =  GER.GCW_Bormann_heer_units
					}
				}
			}
		}
		if = {
			limit = {
				check_variable = { GER.GCW_Bormann_civs_factory > 0 }
			}
			add_offsite_building = {
				type = industrial_complex
				level = GER.GCW_Bormann_civs_factory
			}
		}
		if = {
			limit = {
				check_variable = { GER.GCW_Bormann_arms_factory > 0 }
			}
			add_offsite_building = {
				type = arms_factory
				level = GER.GCW_Bormann_arms_factory
			}
		}
		
		if = {
			limit = { GER = { has_country_flag = bormann_for_germany } }
			change_tag_from = GER
			BGR = { add_ideas = GER_hitlers_chosen_successor }
		}
	}

	# Heydrich
	every_owned_state = {
		limit = { is_HGR_state = yes }
		#set_demilitarized_zone = no
		HGR = {
			transfer_state = PREV
			add_state_core = PREV
		}
	}
	HGR = {
		if = {
			limit = { country_exists = HGR } #The above state transfer already checks if Heydrich is indisposed or not
			
			add_to_array = { global.GCW_contenders = THIS }
			inherit_technology = PREV
			load_oob = HGR
			load_oob = "HGR_mtg_navy"
			set_war_support = GER.GER_Heydrich_Influence
			set_variable = { GCW_legitimacy = GER.GER_Heydrich_Influence }
			GCW_intialise_legitimacy = yes

			if = {
				limit = {
					check_variable = { GER.GCW_Heydrich_infantry_weapons > 0 }
				}
				add_equipment_to_stockpile = {
					type = infantry_equipment
					amount = GER.GCW_Heydrich_infantry_weapons
					producer = GER
				}
			}
			if = {
				limit = {
					check_variable = { GER.GCW_Heydrich_heer_units > 0 }
				}
				hidden_effect = {
					capital_scope = {
						create_unit = {
							division = "division_template = \"Schutzstaffel-Infanterie\" start_experience_factor = 0.1 start_equipment_factor = 0.3"
							owner = PREV
							count =  GER.GCW_Heydrich_heer_units
						}
					}
				}
			}
			if = {
				limit = {
					check_variable = { GER.GCW_Heydrich_civs_factory > 0 }
				}
				add_offsite_building = {
					type = industrial_complex
					level = GER.GCW_Heydrich_civs_factory
				}
			}
			if = {
				limit = {
					check_variable = { GER.GCW_Heydrich_arms_factory > 0 }
				}
				add_offsite_building = {
					type = arms_factory
					level = GER.GCW_Heydrich_arms_factory
				}
			}

			if = {
				limit = { GER = { has_country_flag = heydrich_for_germany } }
				change_tag_from = GER
				HGR = { add_ideas = GER_hitlers_chosen_successor }
			}
			if = {
				limit = { GER = { has_country_flag = HGR_burgundian_reinforcements } }
				28 = {
					create_unit = {
						division = "name = \"Burgundische Panzer-Division\" division_template = \"Burgundische Panzer-Division\" start_experience_factor = 0.3"
						owner = HGR
					}
				}
				28 = {
					create_unit = {
						division = "name = \"Burgundische Panzer-Division\" division_template = \"Burgundische Panzer-Division\" start_experience_factor = 0.3"
						owner = HGR
					}
				}
			}

			every_country = {
				limit = {
					NOT = { has_government = burgundian_system }
				}
				add_opinion_modifier = { target = HGR modifier = TNO_embargo }
			}
		}
	}

	## War Decleration, ideas & focus tree loading

	## Divide equipment
	# 20% to boreman
	send_equipment_fraction = {
		target = BGR
		value = 0.2
	}
	# 20% to spet
	send_equipment_fraction = {
		target = SGR
		value = 0.25
	}
	# 30% to goring
	send_equipment_fraction = {
		target = GGR
		value = 0.5
	}
	# 10% to heydrich
	send_equipment_fraction = {
		target = HGR
		value = 0.33
	}
	# 10% goes bye bye keep 10%
	send_equipment_fraction = {
		target = ZZZ
		value = 0.5
	}

	#Ditch the pre-CW ideas
	remove_ideas = {
		to_banish_want
		the_two_principles
		endsieg
		gone_over
		man_on_the_moon
	}
	BGR = {
		declare_war_on = { target = GGR type = civil_war }
		add_ideas = GER_BGR_civil_war_offense
		load_focus_tree = tno_bormann_civil_war
	}

	GGR = {
		add_ideas = GER_GGR_civil_war_offense
		load_focus_tree = GGR_civil_war
	}

	SGR = {
		declare_war_on = { target = BGR type = civil_war }
		declare_war_on = { target = GGR type = civil_war }
		add_ideas = GER_SGR_civil_war_offense
		load_focus_tree = tno_speer_civil_war
	}

	HGR = {
		if = {
			limit = { country_exists = THIS }

			declare_war_on = { target = BGR type = civil_war }
			declare_war_on = { target = GGR type = civil_war }
			declare_war_on = { target = SGR type = civil_war }
			add_ideas = GER_HGR_civil_war_offense
			load_focus_tree = HGR_civil_war
		}
	}

	## Remove Speer/Heydrich from leading the Fash/BurgSys party
	kill_ideology_leader = fascism
	kill_ideology_leader = burgundian_system

	## Remove legitimacy decisions
	clr_country_flag = GER_power_struggle

	## Set up global flag
	set_global_flag = german_civil_war
	
	## News Event Time
	every_country = {
		news_event = WORLD.5
	}

	log = "[GetDateText]: [This.GetName]: GER_GCW_begin; Completed execution."
}

## GCW Conclusion Effects
GER_GCW_conclude = {
	if = {
		limit = {
			NOT = { has_global_flag = GGR_gcw2 } # This check literally only exists because Göring code (as of writing) is a cursed eldritch being we can't properly fix.
		}
		log = "[GetDateText]: [This.GetName]: GER_GCW_conclude; Executing"
		custom_effect_tooltip = GER_fix_your_shit_pdx
	
		country_event = {
			id = reich_shared.23
			days = 31
		}

		# Just in case
		BGR = { remove_ideas = Anti_Heydrich_Pact }
		SGR = { remove_ideas = Anti_Heydrich_Pact }
		GGR = { remove_ideas = Anti_Heydrich_Pact }
	
		hidden_effect = {
			##Conclude
			GER = {
				#Flag Stuff
				clr_global_flag = german_civil_war
				set_global_flag = german_civil_war_end
				clr_global_flag = GCW_Speidel_Refused_Victor
				clr_global_flag = GCW_Speidel_Active
				clr_country_flag = GER_bormann_breaks_away
				clr_country_flag = GER_goring_breaks_away
				clr_country_flag = GER_speer_breaks_away
				clr_country_flag = GER_goring_breaks_away
				clr_country_flag = spiedel_in_charge
				clr_country_flag = GER_Speidel_Militarist_Leader
	
				#General
				PREV = { transfer_navy = { target = GER } }
				kill_country_leader = yes
				inherit_technology = PREV
				drop_cosmetic_tag = yes
				set_political_power = 200
				
				#Specific
				if = {
					limit = {
						OR = {
							PREV = { tag = BGR }
							AND = {
								has_global_flag = DBG_GCW_Disable
								has_country_flag = DBG_GCW_Force_BGR_Win
							}
						}
					}
					# clear GCW buffs
					multiply_variable = { GER.GCW_Bormann_civs_factory = -1 }
					multiply_variable = { GER.GCW_Bormann_arms_factory = -1 }
					BGR = {
						add_offsite_building = {
							type = industrial_complex
							level = GER.GCW_Bormann_civs_factory
						}
						add_offsite_building = {
							type = arms_factory
							level = GER.GCW_Bormann_arms_factory
						}
						remove_ideas = {
							GCW_hidden_debuff_1
							GCW_hidden_debuff_2
							GCW_hidden_debuff_3
							GCW_hidden_holy_shit_win_already
						}
					}
	
					log = "[GetDateText]: [Prev.GetName]: GER_GCW_conclude; Bormann Victory"
					set_global_flag = german_civil_war_bormannvic
					GER_GCW_conclude_bormann = yes
				}
				else_if = {
					limit = {
						OR = {
							PREV = { tag = GGR }
							AND = {
								has_global_flag = DBG_GCW_Disable
								has_country_flag = DBG_GCW_Force_GGR_Win
							}
						}
					}
					# clear GCW buffs
					multiply_variable = { GER.GCW_Goring_civs_factory = -1 }
					multiply_variable = { GER.GCW_Goring_arms_factory = -1 }
					GGR = {
						add_offsite_building = {
							type = industrial_complex
							level = GER.GCW_Goring_civs_factory
						}
						add_offsite_building = {
							type = arms_factory
							level = GER.GCW_Goring_arms_factory
						}
						remove_ideas = {
							GCW_hidden_debuff_1
							GCW_hidden_debuff_2
							GCW_hidden_debuff_3
							GCW_hidden_holy_shit_win_already
						}
					}
	
					log = "[GetDateText]: [Prev.GetName]: GER_GCW_conclude; Goering Victory"
					set_global_flag = german_civil_war_goeringvic
					GER_GCW_conclude_goering = yes
				}
				else_if = {
					limit = {
						OR = {
							PREV = { tag = SGR }
							AND = {
								has_global_flag = DBG_GCW_Disable
								has_country_flag = DBG_GCW_Force_SGR_Win
							}
						}
					}
					# clear GCW buffs
					multiply_variable = { GER.GCW_Speer_civs_factory = -1 }
					multiply_variable = { GER.GCW_Speer_arms_factory = -1 }
					SGR = {
						add_offsite_building = {
							type = industrial_complex
							level = GER.GCW_Speer_civs_factory
						}
						add_offsite_building = {
							type = arms_factory
							level = GER.GCW_Speer_arms_factory
						}
						remove_ideas = {
							GCW_hidden_debuff_1
							GCW_hidden_debuff_2
							GCW_hidden_debuff_3
							GCW_hidden_holy_shit_win_already
						}
					}
	
					log = "[GetDateText]: [Prev.GetName]: GER_GCW_conclude; Speer Victory"
					set_global_flag = german_civil_war_speervic
					GER_GCW_conclude_speer = yes
				}
				else_if = {
					limit = {
						OR = {
							PREV = { tag = HGR }
							AND = {
								has_global_flag = DBG_GCW_Disable
								has_country_flag = DBG_GCW_Force_HGR_Win
							}
						}
					}
					# clear GCW buffs
					multiply_variable = { GER.GCW_Heydrich_civs_factory = -1 }
					multiply_variable = { GER.GCW_Heydrich_arms_factory = -1 }
					HGR = {
						add_offsite_building = {
							type = industrial_complex
							level = GER.GCW_Heydrich_civs_factory
						}
						add_offsite_building = {
							type = arms_factory
							level = GER.GCW_Heydrich_arms_factory
						}
						remove_ideas = {
							GCW_hidden_debuff_1
							GCW_hidden_debuff_2
							GCW_hidden_debuff_3
							GCW_hidden_holy_shit_win_already
						}
					}
	
					every_unit_leader = {
						limit = { has_id = 70 }
						set_nationality = ZZZ
					}
	
					log = "[GetDateText]: [Prev.GetName]: GER_GCW_conclude; Heydrich Victory"
					set_global_flag = german_civil_war_heydrichvic
					GER_GCW_conclude_heydrich = yes
				}
				else = {
					log = "[GetDateText]: [Prev.GetName]: GER_GCW_conclude; Unexpected Victory"
				}
				
				#Recreate the Pakt
				create_faction = Einheitspakt
	
				# Great Game continued
				if = {
					limit = {
						has_global_flag = GreatGame_game_1_GER_victory
						OR = {
							has_global_flag = german_civil_war_bormannvic
							has_global_flag = german_civil_war_speervic
						}
					}
					GER = { add_to_faction = BUL }
					BUL = {
						add_ideas = Pakt_Bundnispartner
						if = {
							limit = { has_global_flag = german_civil_war_speervic }
							join_zollverein = yes
						}
					}
				}
	
				#South African War Call to Action
				country_event = { id = reich.500 days = 20 }
	
				#GDP Stuff (to clarify w/ later GCW work)
				set_variable = { GDP_growth = 0.001 }
				set_variable = { misc_income = 0 }
	
				#World Stuff
				PostGCW_Tension_Changes = yes
	
				#Debug Flag Clearing
				clr_global_flag = DBG_GCW_Disable
				clr_country_flag = DBG_GCW_Force_BGR_Win
				clr_country_flag = DBG_GCW_Force_GGR_Win
				clr_country_flag = DBG_GCW_Force_SGR_Win
				clr_country_flag = DBG_GCW_Force_HGR_Win
				
				#Closing
				annex_country = { target = PREV transfer_troops = yes }
	
				#Remove GCW Cores
				every_owned_state = {
					remove_core_of = GGR
					remove_core_of = BGR
					remove_core_of = SGR
					remove_core_of = HGR
					remove_core_of = DSR
					remove_core_of = RNW
				}
	
				#Extremely lazy soluttion to Speidel being an economic genius
				multiply_variable = { money_reserves = 0 }
	
				delete_unit_template_and_units = { division_template = "Bürgerwehr" }
				
				#Himmler shenanigans
				BRG = { TNO_BRG_domestic_tree_swap = yes }
	
				#Rommel retires again
				every_unit_leader = {
					limit = { has_id = 72 }
					retire = yes
				}
				
				if = {
					limit = { NOT = { has_country_flag = heydrich_for_germany } }
					#Re-adding Observer ideas
					PER = { add_ideas = Pakt_Observer }
					CYL = { add_ideas = Pakt_Observer }
				}
	
				#Transfer player tag (has to be done last, anything coded after this won't work properly)
				if = { limit = { PREV = { is_ai = no } } change_tag_from = PREV }
			}
		}
	
		log = "[GetDateText]: [This.GetName]: GER_GCW_conclude; Completed execution."
	}
}

GER_GCW_conclude_bormann = {
	log = "[GetDateText]: [This.GetName]: GER_GCW_conclude_bormann; Executing."

	## Ideas
	add_ideas = {
		#Spirits
		

		#Ministers
		GER_Baldur_von_Schirach_hog
		GER_Wilhelm_Burgdorf_sec
		GER_Walther_Hewel_for
		GER_Kurt_Lange_eco
	}

	## Politics
	create_country_leader = {
		name = "Martin Bormann"
		desc = "POLITICS_MARTIN_BORMANN_DESC"
		picture = "Portrait_Germany_Martin_Bormann.dds"
		expire = "1990.1.1"
		ideology = national_socialism_subtype
		traits = {
			dictator
		}
	}
	create_country_leader = {
		name = "Hans Speidel"
		desc = "POLITICS_HANS_SPEIDEL_DESC"
		picture = "Portrait_Germany_Hans_Spiedel.dds"
		expire = "1999.1.1"
		ideology = fascism_subtype
	}
	create_country_leader = {
		name = "Hans Filbinger"
		expire = "1999.1.1"
		ideology = authoritarian_democrat_subtype
	}
	create_country_leader = {
		name = "Eugen Gerstenmaier"
		expire = "1999.1.1"
		ideology = social_conservative_subtype
	}

	# Political Popularity & Ruling Party
	set_politics = { ruling_party = national_socialism }
	set_popularities = {
		communist = 0
		socialist = 0
		social_democrat = 0
		social_liberal = 0
		market_liberal = 0
		social_conservative = 2
		authoritarian_democrat = 4
		despotism = 0
		fascism = 18
		national_socialism = 60
		ultranational_socialism = 16
		burgundian_system = 0
	}

	# Party Names
	set_party_name = {
		ideology = national_socialism
		long_name = GER_BOR_national_socialism_party_long
		name = GER_BOR_national_socialism_party
	}
	set_party_name = {
		ideology = fascism
		long_name = GER_BOR_fascism_party_long
		name = GER_BOR_fascism_party
	}
	set_party_name = {
		ideology = authoritarian_democrat
		long_name = GER_BOR_authoritarian_democrat_party_long
		name = GER_BOR_authoritarian_democrat_party
	}
	set_party_name = {
		ideology = social_conservative
		long_name = GER_BOR_social_conservative_party_long
		name = GER_BOR_social_conservative_party
	}
	set_party_name = {
		ideology = social_liberal
		long_name = GER_BOR_social_liberal_party_long
		name = GER_BOR_social_liberal_party
	}
	set_party_name = {
		ideology = social_democrat
		long_name = GER_BOR_social_democrat_party_long
		name = GER_BOR_social_democrat_party
	}
	set_party_name = {
		ideology = socialist
		long_name = GER_BOR_socialist_party_long
		name = GER_BOR_socialist_party
	}
	set_party_name = {
		ideology = communist
		long_name = GER_BOR_communist_party_long
		name = GER_BOR_communist_party
	}
	set_party_name = {
		ideology = ultranational_socialism
		long_name = GER_BOR_ultranational_socialism_party_long
		name = GER_BOR_ultranational_socialism_party
	}

	## Content Setup
	set_country_flag = BOR_Phase1
	load_focus_tree = {
		tree = GER_bormann_post_cw_tree
		keep_completed = no
	}

	## Unit Leaders
	BGR = {
		every_unit_leader = {
			limit = { is_BGR_unit_leader = yes }
			set_nationality = GER
		}
	}

	## Event
	country_event = { id = bormann.1 days = 3 }

	## Kaukasus oil
	if = {
		limit = { CAU = { has_country_flag = CAU_policy_business_bormann } }
		give_resource_rights = { receiver = GER state = 229 }
	}

	## Great Game things
	country_event = { id = GG_startup.3 days = 60 } # Hungary Great Game
	country_event = { id = GG_startup.4 days = 420 } # Romania Great Game
	country_event = { id = GG_startup.5 days = 780 } # France Great Game
	country_event = { id = GG_startup.6 days = 1140 } # Serbia Great Game

	ITA = {
		country_event = { id = GG_startup.3 days = 60 } # Hungary Great Game
		country_event = { id = GG_startup.4 days = 420 } # Romania Great Game
		country_event = { id = GG_startup.5 days = 780 } # France Great Game
		country_event = { id = GG_startup.6 days = 1140 } # Serbia Great Game
	}

	## Load navy
	load_oob = "BGR_mtg_navy"

	## Starter natspirits
	shellshocked_wehrmacht = yes
	thousand_pieces_heavy = yes
	bormann_lost_generation = yes

	## Ireland Rejoining the Pakt
	IRE = { country_event = { id = IRE_eco_collapse.15 days = 100 } }

	log = "[GetDateText]: [This.GetName]: GER_GCW_conclude_bormann; Completed execution."
}

GER_GCW_conclude_goering = {
	log = "[GetDateText]: [This.GetName]: GER_GCW_conclude_goering; Executing."

	## Ideas
	add_ideas = {
		#Spirits
		GER_GOR_lingering_traitors
		rebuilding_germany

		#Ministers
		GGR_Wilhelm_Stuckart_hog
		GER_Ferdinand_Schorner_sec
		GGR_Artur_Axmann_for
		GGR_Paul_Korner_eco
	}

	## Politics
	create_country_leader = {
		name = "Hermann Göring"
		desc = "POLITICS_HERMANN_GORING_DESC"
		picture = "Portrait_Germany_Hermann_Goring.dds"
		expire = "1990.1.1"
		ideology = national_socialism_subtype
		traits = {
			dictator
		}
	}

	# Political Popularity & Ruling Party
	set_politics = { ruling_party = national_socialism }
	set_popularities = {
		national_socialism = 65
		ultranational_socialism = 35
	}

	# Party Names

	## Content Setup
	load_focus_tree = {
		tree = GER_goering_main
		keep_completed = no
	}

	# Events
	country_event = { id = goering.13 days = 5 }
	country_event = { id = goering.500 days = 365 }

	# Militarist GUI
	set_country_flag = GER_Schorner_Militarist_Leader
	set_variable = { GER_Militarist_Influence = 50 }
	set_variable = { GER_Militarist_Loyalty = 50 }
	set_variable = { GER_Militarist_Power = 80 }

	# Etc
	set_country_flag = GER_civil_war_victors
	set_country_flag = GER_domestic_unrest

	## Unit Leaders
	GGR = {
		every_unit_leader = {
			limit = { is_GGR_unit_leader = yes }
			set_nationality = GER
		}
	}

	## Event
	country_event = { id = goering.2 days = 3 }
	country_event = { id = goering.1703 days = 4}
	country_event = { id = goering.1704 days = 6 }
	country_event = { id = goering.1705 days = 12 }
	country_event = { id = goering.1706 days = 15 } 
	country_event = { id = goering.1707 days = 20 } 

	## Kaukasus oil
	if = {
		limit = { CAU = { has_country_flag = CAU_policy_business_goering } }
		give_resource_rights = { receiver = GER state = 229 }
	}

	## Ireland Rejoining the Pakt
	IRE = { country_event = { id = IRE_eco_collapse.15 days = 100 } }

	log = "[GetDateText]: [This.GetName]: GER_GCW_conclude_goering; Completed execution."
}

GER_GCW_conclude_speer = {
	log = "[GetDateText]: [This.GetName]: GER_GCW_conclude_speer; Executing."

	## Ideas
	add_ideas = {
		#Spirits
		GER_SGR_the_lost_generation
		GER_SGR_wary_wehrmacht
		GER_SGR_gang_of_four

		#Ministers
		GER_Kurt_Georg_Kiesinger_hog
		GER_Helmut_Schmidt_for
		GER_Ludwig_Erhard_eco
		GER_Henning_von_Tresckow_sec
	}

	## Politics
	create_country_leader = {
		name = "Albert Speer"
		desc = "POLITICS_SPEER_GERMANY_DESC"
		picture = "Portrait_Germany_Albert_Speer.dds"
		expire = "1990.1.1"
		ideology = fascism_subtype
		traits = {
			dictator
		}
	}

	# Political Popularity & Ruling Party
	set_politics = { ruling_party = fascism }
	set_popularities = {
		communist = 0
		socialist = 1
		social_democrat = 1
		social_liberal = 1
		market_liberal = 0
		social_conservative = 0
		authoritarian_democrat = 12
		despotism = 0
		fascism = 45
		national_socialism = 40
		ultranational_socialism = 0
		burgundian_system = 0
	}

	# Party Names
	set_party_name = {
		ideology = national_socialism
		long_name = SGR_national_socialism_party_long
		name = SGR_national_socialism_party
	}
	set_party_name = {
		ideology = fascism
		long_name = SGR_fascism_party_long
		name = SGR_fascism_party
	}
	set_party_name = {
		ideology = authoritarian_democrat
		long_name = SGR_authoritarian_democrat_party_long
		name = SGR_authoritarian_democrat_party
	}
	set_party_name = {
		ideology = social_democrat
		long_name = SGR_social_democrat_party_long
		name = SGR_social_democrat_party
	}
	set_party_name = {
		ideology = social_liberal
		long_name = SGR_social_liberal_party_long
		name = SGR_social_liberal_party
	}
	set_party_name = {
		ideology = socialist
		long_name = SGR_socialist_party_long
		name = SGR_socialist_party
	}
	set_party_name = {
		ideology = communist
		long_name = SGR_communist_party_long
		name = SGR_communist_party
	}

	#Political Leaders
	#UNBEKANNT - AuthSoc
	create_country_leader = {
		name = "UNBEKANNT"
		desc = ""
		picture = "Portrait_Germany_Albert_Speer.dds"
		expire = "1990.1.1"
		ideology = communist_subtype
		traits = { }
	}
	#UNBEKANNT - LibSoc
	create_country_leader = {
		name = "UNBEKANNT"
		desc = ""
		picture = "Portrait_Germany_Albert_Speer.dds"
		expire = "1990.1.1"
		ideology = socialist_subtype
		traits = { }
	}
	#UNBEKANNT - SocDem
	create_country_leader = {
		name = "UNBEKANNT"
		desc = ""
		picture = "Portrait_Germany_Unbekannt.dds"
		expire = "1990.1.1"
		ideology = social_democrat_subtype
		traits = { }
	}
	#Various Leaders - SocLib
	create_country_leader = {
		name = "Various leaders"
		desc = ""
		picture = "Portrait_Germany_Albert_Speer.dds"
		expire = "1990.1.1"
		ideology = social_liberal_subtype
		traits = { }
	}
	#Helmut Schmidt - AuthDem
	create_country_leader = {
		name = "Helmut Schmidt"
		desc = "POLITICS_SPEER_GERMANY_DESC"
		picture = "Portrait_Germany_Helmut_Schmidt.dds"
		expire = "1990.1.1"
		ideology = authoritarian_democrat_subtype
		traits = { }
	}
	#Theodor Oberländer - NatSoc
	create_country_leader = {
		name = "Theodor Oberländer"
		desc = "POLITICS_SPEER_GERMANY_DESC"
		picture = "Portrait_Germany_Theodor_Oberlander.dds"
		expire = "1990.1.1"
		ideology = national_socialism_subtype
		traits = {
		}
	}

	##Content Setup
	load_focus_tree = {
		tree = GER_speer_post_cw_tree
		keep_completed = no
	}

	#Speer Mechanics Init
	initialize_state_of_the_reich = yes
	initialize_speer_arrays = yes
	add_to_array = {ZV_members = THIS}

	## Unit Leaders
	SGR = {
		every_unit_leader = {
			limit = { is_SGR_unit_leader = yes }
			set_nationality = GER
		}
	}

	## Event
	country_event = { id = speer.1 days = 3 }
	country_event = speer.10000

	## Balance things
	set_stability = 0.3

	## For the AI to be able to use the RND gui
	if = {
		limit = { SGR = { is_ai = yes } }
		set_country_flag = RND_Tech_Window_Open
	}
	GER = {
		set_country_flag = gui_alert_visible
		set_country_flag = GER_Economy_GUI_notif
	}
	## Great Game things
	country_event = { id = GG_startup.3 days = 60 } # Hungary Great Game
	country_event = { id = GG_startup.4 days = 420 } # Romania Great Game
	country_event = { id = GG_startup.5 days = 780 } # France Great Game
	country_event = { id = GG_startup.6 days = 1140 } # Serbia Great Game

	ITA = {
		country_event = { id = GG_startup.3 days = 60 } # Hungary Great Game
		country_event = { id = GG_startup.4 days = 420 } # Romania Great Game
		country_event = { id = GG_startup.5 days = 780 } # France Great Game
		country_event = { id = GG_startup.6 days = 1140 } # Serbia Great Game
	}

	## Ireland Rejoining the Pakt
	IRE = { country_event = { id = IRE_eco_collapse.15 days = 100 } }

	log = "[GetDateText]: [This.GetName]: GER_GCW_conclude_speer; Completed execution."
}

GER_GCW_conclude_heydrich = {
	log = "[GetDateText]: [This.GetName]: GER_GCW_conclude_heydrich; Executing."

	## Ideas
	add_ideas = {
		#Spirits
		

		#Ministers
		GER_Philipp_Bouhler_hog
		GER_Herbert_Otto_Gille_sec
		GER_Gunter_dAlquen_for
		GER_Hanns_Martin_Schleyer_eco
	}

	## Politics
	create_country_leader = {
		name = "Reinhard Heydrich"
		desc = "POLITICS_REINHARD_HEYDRICH_DESC"
		picture = "Portrait_Germany_Reinhard_Heydrich.dds"
		expire = "1999.1.1"
		ideology = burgundian_system_subtype
		traits = {
			dictator
		}
	}

	# Political Popularity & Ruling Party
	set_politics = { ruling_party = burgundian_system }
	set_popularities = {
		communist = 0
		socialist = 0
		social_democrat = 0
		social_liberal = 0
		market_liberal = 0
		social_conservative = 0
		authoritarian_democrat = 0
		despotism = 0
		fascism = 0
		national_socialism = 23
		ultranational_socialism = 0
		burgundian_system = 77
	}

	# Party Names

	## Content Setup

	## Unit Leaders
	#Remove Speidelist Unit Leaders
	remove_unit_leader = 70
	remove_unit_leader = 72
	remove_unit_leader = 96
	remove_unit_leader = 101
	remove_unit_leader = 106
	remove_unit_leader = 108
	remove_unit_leader = 110
	remove_unit_leader = 113
	remove_unit_leader = 116
	remove_unit_leader = 117
	remove_unit_leader = 128
	remove_unit_leader = 129
	remove_unit_leader = 147
	remove_unit_leader = 148
	remove_unit_leader = 149

	#Heydrichite Leaders
	HGR = {
		every_unit_leader = {
			limit = { is_HGR_unit_leader = yes }
			set_nationality = GER
		}
	}

	## Event
	country_event = { id = HGR.99 days = 1 }

	log = "[GetDateText]: [This.GetName]: GER_GCW_conclude_heydrich; Completed execution."
}

## Post GCW Tension Changes
PostGCW_Tension_Changes = {
	log = "[GetDateText]: [Root.GetName]: PostGCW_Tension_Changes; Executing."

	#Bormann
	if = {
		limit = { has_global_flag = german_civil_war_bormannvic }
		add_named_threat = { threat = -50 name = threat.47.t }
		TNO_World_Tension_subtract_50 = yes
	}
	#Goering
	else_if = {
		limit = { has_global_flag = german_civil_war_goeringvic }
		add_named_threat = { threat = -45 name = threat.48.t }
		TNO_World_Tension_subtract_45 = yes
	}
	#Speer
	else_if = {
		limit = { has_global_flag = german_civil_war_speervic }

		add_named_threat = { threat = -55 name = threat.46.t }
		TNO_World_Tension_subtract_55 = yes
	}
	#Heydrich
	else_if = {
		limit = { has_global_flag = german_civil_war_heydrichvic }
		add_named_threat = { threat = 100 name = threat.49.t } #fix
		TNO_World_Tension_add_75 = yes
	}
	#DSR
	else_if = {
		limit = { has_global_flag = GCW_DSR_Victory }
		add_named_threat = { threat = 100 name = threat.50.t } #fix
		TNO_World_Tension_add_75 = yes
	}
	#RNW
	else_if = {
		limit = { has_global_flag = GCW_RNW_Victory }
		add_named_threat = { threat = 100 name = threat.51.t } #fix
		TNO_World_Tension_add_75 = yes
	}

	log = "[GetDateText]: [Root.GetName]: PostGCW_Tension_Changes; Completed execution."
}

## GCW Contenders Managing Effects (Used in TNO_peace_on_actions.txt)
GER_GCW_check_victor = {
	log = "[GetDateText]: [This.GetName]: GER_GCW_check_victor; Executing."

	if = {
		limit = { check_variable = { global.GCW_contenders^num = 1 } }
		#Cleanup space

		#Conclude
		if = {
			limit = { NOT = { has_global_flag = GCW_Speidel_Active } }
			GER = { country_event = { id = reich.30 } }
		}
		else = {
			#Fix up later, *will* cause issues
			clear_array = global.GCW_contenders
			GER_GCW_conclude = yes
		}
		log = "[GetDateText]: [This.GetName]: GER_GCW_check_victor;"
	}

	log = "[GetDateText]: [This.GetName]: GER_GCW_check_victor; Completed execution."
}

GER_GCW_off_a_fucker = {
	log = "[GetDateText]: [This.GetName]: GER_GCW_off_a_fucker; Executing."

	# funny workaround
	if = {
		limit = { has_global_flag = anti_heydrich_pact_formed }
		# speer dies
		if = {
			limit = {
				ROOT = { tag = SGR }
			}
			SGR = { dismantle_faction = yes }
			if = {
				limit = { country_exists = BGR }
				# bormann and goering left
				if = {
					limit = { country_exists = GGR }
					BGR = { create_faction = anti_heydrich_pact_faction }
					BGR = { add_to_faction = GGR }
				}
				# bormann left
				else = {
					clr_global_flag = anti_heydrich_pact_formed
				}
			}
			# goering left
			else = {
				clr_global_flag = anti_heydrich_pact_formed
			}
		}
		# bormann dies goering left or goering dies bormann left
		else_if = {
			limit = {
				OR = {
					ROOT = { tag = BGR }
					ROOT = { tag = GGR }
				}
				NOT = { country_exists = SGR }
			}
			BGR = { dismantle_faction = yes }
			clr_global_flag = anti_heydrich_pact_formed
		}
	}

	# anti-heydrich pact clean up
	if = {
		limit = {
			ROOT = { tag = HGR }
			has_global_flag = anti_heydrich_pact_formed
		}
		clr_global_flag = anti_heydrich_pact_formed
		if = {
			limit = { country_exists = SGR }
			SGR = { dismantle_faction = yes }
			if = {
				limit = { country_exists = BGR }
				BGR = {
					declare_war_on = { target = SGR type = civil_war }
				}
			}
			if = {
				limit = { country_exists = GGR }
				if = {
					limit = { country_exists = BGR }
					GGR = {
						declare_war_on = { target = BGR type = civil_war }
					}
				}
				GGR = {
					declare_war_on = { target = SGR type = civil_war }
				}
			}
		}
		else_if = {
			limit = { country_exists = BGR }
			BGR = { dismantle_faction = yes }
			if = {
				limit = { country_exists = BGR }
				GGR = {
					declare_war_on = { target = BGR type = civil_war }
				}
			}
		}
	}

	remove_from_array = { global.GCW_contenders = THIS }

	# clear GCW buffs
	remove_dynamic_modifier = { modifier = GCW_legitimacy_dynamic_modifier }
	remove_ideas = {
		GCW_hidden_debuff_1
		GCW_hidden_debuff_2
		GCW_hidden_debuff_3
	}

	if = {
		limit = {
			ROOT = { tag = BGR }
		}
		multiply_variable = { GER.GCW_Bormann_civs_factory = -1 }
		multiply_variable = { GER.GCW_Bormann_arms_factory = -1 }
		add_offsite_building = {
			type = industrial_complex
			level = GER.GCW_Bormann_civs_factory
		}
		add_offsite_building = {
			type = arms_factory
			level = GER.GCW_Bormann_arms_factory
		}
	}
	else_if = {
		limit = {
			ROOT = { tag = GGR }
		}
		multiply_variable = { GER.GCW_Goring_civs_factory = -1 }
		multiply_variable = { GER.GCW_Goring_arms_factory = -1 }
		add_offsite_building = {
			type = industrial_complex
			level = GER.GCW_Goring_civs_factory
		}
		add_offsite_building = {
			type = arms_factory
			level = GER.GCW_Goring_arms_factory
		}
	}
	else_if = {
		limit = {
			ROOT = { tag = SGR }
		}
		multiply_variable = { GER.GCW_Speer_civs_factory = -1 }
		multiply_variable = { GER.GCW_Speer_arms_factory = -1 }
		add_offsite_building = {
			type = industrial_complex
			level = GER.GCW_Speer_civs_factory
		}
		add_offsite_building = {
			type = arms_factory
			level = GER.GCW_Speer_arms_factory
		}
	}
	else_if = {
		limit = {
			ROOT = { tag = HGR }
		}
		multiply_variable = { GER.GCW_Heydrich_civs_factory = -1 }
		multiply_variable = { GER.GCW_Heydrich_arms_factory = -1 }
		add_offsite_building = {
			type = industrial_complex
			level = GER.GCW_Heydrich_civs_factory
		}
		add_offsite_building = {
			type = arms_factory
			level = GER.GCW_Heydrich_arms_factory
		}
	}

	## Old contender fleeing stuff, commented out for now
	# for_each_scope_loop = {
	# 	array = global.GCW_contenders
	# 	log = "[GetDateText]: [This.GetName]: GER_GCW_off_a_fucker; [This.GetTag], [Root.GetTag]"

	# 	if = {
	# 		limit = { ROOT = { tag = BGR } }
	# 		country_event = { id = gcw.30 hours = 6 }
	# 	}
	# 	else_if = {
	# 		limit = { ROOT = { tag = GGR } }
	# 		country_event = { id = gcw.31 hours = 6 }
	# 	}
	# 	else_if = {
	# 		limit = { ROOT = { tag = SGR } }
	# 		country_event = { id = gcw.32 hours = 6 }
	# 	}
	# 	else_if = {
	# 		limit = { ROOT = { tag = HGR } }
	# 		country_event = { id = gcw.33 hours = 6 }
	# 	}
	# }

	log = "[GetDateText]: [This.GetName]: GER_GCW_off_a_fucker; Completed execution."
}

### Other Stuff ###
## Militarist Monthly Changes (used for Pre-GCW & Goering)
GER_militarist_monthly_changes = {
	# PRE GCW
	if = {
		limit = { has_country_flag = GER_expanded_draft }
		GGR_increase_militarist_power_small = yes
	}
	if = {
		limit = { has_country_flag = GER_overextended_airforce }
		GGR_decrease_militarist_power_small = yes
	}
	if = {
		limit = { has_country_flag = GER_faith_in_the_fuhrer }
		GGR_increase_militarist_loyalty_large = yes
	}
	if = {
		limit = { has_country_flag = GER_rampant_factionalism }
		GGR_decrease_militarist_influence_small = yes
		GGR_decrease_militarist_power_small = yes
		GGR_decrease_militarist_loyalty_small = yes
	}
	if = {
		limit = { has_country_flag = GER_supported_the_navy }
		GGR_increase_militarist_loyalty_small = yes
		GGR_increase_militarist_power_small = yes
		GGR_increase_militarist_influence_small = yes
	}
	if = {
		limit = { has_country_flag = GER_acted_against_SS }
		GGR_increase_militarist_loyalty_small = yes
		GGR_increase_militarist_influence_small = yes
	}
	if = {
		limit = { has_country_flag = GER_reduced_heer_budget }
		GGR_decrease_militarist_influence_small = yes
		GGR_decrease_militarist_power_small = yes
		GGR_decrease_militarist_loyalty_small = yes
	}
}

## South African War Withdrawal #
GER_withdraw_from_SAW = {
	clr_country_flag = GER_entered_sa_war
	hidden_effect = { recall_volunteers_from = SAF }
	if = {
		limit = { has_global_flag = german_civil_war_speervic }
		custom_effect_tooltip = SGR_SAW_withdraw
		reload_GER_speer_post_cw_tree = yes
	}
}

## Contender Flight Effects
GER_Bormann_Flees = {
	log = "[GetDateText]: [Root.GetName]: GER_Bormann_Flees; Executing."
	random_country = {
		limit = {
			OR = {
				original_tag = CZE
				original_tag = DEN
				original_tag = HOL
				original_tag = MCW
				original_tag = SLO
				original_tag = CZE
			}
			NOT = { has_country_flag = rejected_bormann }
		}
		country_event = { id = bormann.101 days = 3 random = 24 }
		ROOT = { set_temp_variable = { bormann_option = 1 } }
	}
}

GER_Goering_Flees = {
	log = "[GetDateText]: [Root.GetName]: GER_Goering_Flees; Executing."
	COG = { country_event = { id = goering.151 days = 3 random = 24 } }
}

GER_Speer_Flees = {
	log = "[GetDateText]: [Root.GetName]: GER_Speer_Flees; Executing."
	USA = { country_event = { id = speer.151 days = 3 random = 24 } }
}

GER_apply_embargos = {
	hidden_effect = {
		#OFN Embargos
		add_opinion_modifier = { target = USA modifier = embargo }
		add_opinion_modifier = { target = CAN modifier = embargo }
		add_opinion_modifier = { target = AST modifier = embargo }
		add_opinion_modifier = { target = GUY modifier = embargo }
		add_opinion_modifier = { target = NZL modifier = embargo }
		add_opinion_modifier = { target = ICE modifier = embargo }
		add_opinion_modifier = { target = WIN modifier = embargo }
		add_opinion_modifier = { target = BLZ modifier = embargo }

		#CPS Embargos
		add_opinion_modifier = { target = JAP modifier = embargo }
		add_opinion_modifier = { target = CHI modifier = embargo }
		add_opinion_modifier = { target = PHI modifier = embargo }
		add_opinion_modifier = { target = INS modifier = embargo }
		add_opinion_modifier = { target = BUR modifier = embargo }
		add_opinion_modifier = { target = SIA modifier = embargo }
		add_opinion_modifier = { target = CAM modifier = embargo }
		add_opinion_modifier = { target = LAO modifier = embargo }
		add_opinion_modifier = { target = VIN modifier = embargo }
		add_opinion_modifier = { target = SYO modifier = embargo }
		add_opinion_modifier = { target = HUI modifier = embargo }
		add_opinion_modifier = { target = GXC modifier = embargo }
		add_opinion_modifier = { target = MAN modifier = embargo }
		add_opinion_modifier = { target = SIC modifier = embargo }
		add_opinion_modifier = { target = GUZ modifier = embargo }
		add_opinion_modifier = { target = SHX modifier = embargo }
		add_opinion_modifier = { target = BEN modifier = embargo }
		add_opinion_modifier = { target = GNG modifier = embargo }
		add_opinion_modifier = { target = YUN modifier = embargo }
		add_opinion_modifier = { target = BHU modifier = embargo }
	}
}

GER_drop_embargos = {
	hidden_effect = {
		#Drop OFN Embargos
		remove_opinion_modifier = { target = USA modifier = embargo }
		remove_opinion_modifier = { target = CAN modifier = embargo }
		remove_opinion_modifier = { target = AST modifier = embargo }
		remove_opinion_modifier = { target = GUY modifier = embargo }
		remove_opinion_modifier = { target = NZL modifier = embargo }
		remove_opinion_modifier = { target = ICE modifier = embargo }
		remove_opinion_modifier = { target = WIN modifier = embargo }
		remove_opinion_modifier = { target = BLZ modifier = embargo }

		#Drop CPS Embargos
		remove_opinion_modifier = { target = JAP modifier = embargo }
		remove_opinion_modifier = { target = CHI modifier = embargo }
		remove_opinion_modifier = { target = PHI modifier = embargo }
		remove_opinion_modifier = { target = INS modifier = embargo }
		remove_opinion_modifier = { target = BUR modifier = embargo }
		remove_opinion_modifier = { target = SIA modifier = embargo }
		remove_opinion_modifier = { target = CAM modifier = embargo }
		remove_opinion_modifier = { target = LAO modifier = embargo }
		remove_opinion_modifier = { target = VIN modifier = embargo }
		remove_opinion_modifier = { target = SYO modifier = embargo }
		remove_opinion_modifier = { target = HUI modifier = embargo }
		remove_opinion_modifier = { target = GXC modifier = embargo }
		remove_opinion_modifier = { target = MAN modifier = embargo }
		remove_opinion_modifier = { target = SIC modifier = embargo }
		remove_opinion_modifier = { target = GUZ modifier = embargo }
		remove_opinion_modifier = { target = SHX modifier = embargo }
		remove_opinion_modifier = { target = BEN modifier = embargo }
		remove_opinion_modifier = { target = GNG modifier = embargo }
		remove_opinion_modifier = { target = YUN modifier = embargo }
		remove_opinion_modifier = { target = BHU modifier = embargo }
	}
}

GER_hitler_advance = {
	GER = {
		if = {
			limit = { has_country_flag = GER_Hitler_Stage1 }
			clr_country_flag = GER_Hitler_Stage1
			set_country_flag = GER_Hitler_Stage2
		}
		else_if = {
			limit = { has_country_flag = GER_Hitler_Stage2 }
			clr_country_flag = GER_Hitler_Stage2
			set_country_flag = GER_Hitler_Stage3
		}
		else_if = {
			limit = { has_country_flag = GER_Hitler_Stage3 }
			clr_country_flag = GER_Hitler_Stage3
			set_country_flag = GER_Hitler_Stage4
		}
		else_if = {
			limit = { has_country_flag = GER_Hitler_Stage4 }
			clr_country_flag = GER_Hitler_Stage4
			set_country_flag = GER_Hitler_Stage5
		}
		else_if = {
			limit = { has_country_flag = GER_Hitler_Stage5 }
			clr_country_flag = GER_Hitler_Stage5
			set_country_flag = GER_Hitler_Stage6
		}
		else_if = {
			limit = { has_country_flag = GER_Hitler_Stage6 }
			clr_country_flag = GER_Hitler_Stage6
			set_country_flag = GER_Hitler_Stage7
		}
		else_if = {
			limit = { has_country_flag = GER_Hitler_Stage7 }
			clr_country_flag = GER_Hitler_Stage7
			set_country_flag = GER_Hitler_Stage8
		}
	}
}

GCW_build_up_civ_factories = {
	custom_effect_tooltip = GCW_build_up_civ_factories_tt
	if = {
		limit = {
			OR = {
				AND = {
					has_country_flag = bormann_for_germany
					check_variable = { ai_check_temp = 0 }
				}
				AND = {
					has_country_flag = ai_bormann_build_up
					check_variable = { ai_check_temp = 1 }
				}
			}
		}
		add_to_variable = { GCW_Bormann_civs_factory = 1 }
		if = {
			limit = {
				has_country_flag = ai_bormann_build_up
				check_variable = { GER_Bormann_Influence > GER_Bormann_Influence_limit }
			}
			activate_mission = GER_GCW_bormann_build_up
		}
		else = {
			clr_country_flag = ai_bormann_build_up
		}
	}
	else_if = {
		limit = {
			OR = {
				AND = {
					has_country_flag = goring_for_germany
					check_variable = { ai_check_temp = 0 }
				}
				AND = {
					has_country_flag = ai_goring_build_up
					check_variable = { ai_check_temp = 1 }
				}
			}
		}
		add_to_variable = { GCW_Goring_civs_factory = 1 }
		if = {
			limit = {
				has_country_flag = ai_goring_build_up
				check_variable = { GER_Goring_Influence > GER_Goring_Influence_limit }
			}
			activate_mission = GER_GCW_goring_build_up
		}
		else = {
			clr_country_flag = ai_goring_build_up
		}
	}
	else_if = {
		limit = {
			OR = {
				AND = {
					has_country_flag = speer_for_germany
					check_variable = { ai_check_temp = 0 }
				}
				AND = {
					has_country_flag = ai_speer_build_up
					check_variable = { ai_check_temp = 1 }
				}
			}
		}
		add_to_variable = { GCW_Speer_civs_factory = 1 }
		if = {
			limit = {
				has_country_flag = ai_speer_build_up
				check_variable = { GER_Speer_Influence > GER_Speer_Influence_limit }
			}
			activate_mission = GER_GCW_speer_build_up
		}
		else = {
			clr_country_flag = ai_speer_build_up
		}
	}
	else_if = {
		limit = {
			OR = {
				AND = {
					has_country_flag = heydrich_for_germany
					check_variable = { ai_check_temp = 0 }
				}
				AND = {
					has_country_flag = ai_heydrich_build_up
					check_variable = { ai_check_temp = 1 }
				}
			}
		}
		add_to_variable = { GCW_Heydrich_civs_factory = 1 }
		if = {
			limit = {
				has_country_flag = ai_heydrich_build_up
				check_variable = { GER_Heydrich_Influence > GER_Heydrich_Influence_limit }
			}
			activate_mission = GER_GCW_heydrich_build_up
		}
		else = {
			clr_country_flag = ai_heydrich_build_up
		}
	}
}

GCW_build_up_mil_factories = {
	custom_effect_tooltip = GCW_build_up_mil_factories_tt
	if = {
		limit = {
			OR = {
				AND = {
					has_country_flag = bormann_for_germany
					check_variable = { ai_check_temp = 0 }
				}
				AND = {
					has_country_flag = ai_bormann_build_up
					check_variable = { ai_check_temp = 1 }
				}
			}
		}
		add_to_variable = { GCW_Bormann_arms_factory = 1 }
		if = {
			limit = {
				has_country_flag = ai_bormann_build_up
				check_variable = { GER_Bormann_Influence > GER_Bormann_Influence_limit }
			}
			activate_mission = GER_GCW_bormann_build_up
		}
		else = {
			clr_country_flag = ai_bormann_build_up
		}
	}
	else_if = {
		limit = {
			OR = {
				AND = {
					has_country_flag = goring_for_germany
					check_variable = { ai_check_temp = 0 }
				}
				AND = {
					has_country_flag = ai_goring_build_up
					check_variable = { ai_check_temp = 1 }
				}
			}
		}
		add_to_variable = { GCW_Goring_arms_factory = 1 }
		if = {
			limit = {
				has_country_flag = ai_goring_build_up
				check_variable = { GER_Goring_Influence > GER_Goring_Influence_limit }
			}
			activate_mission = GER_GCW_goring_build_up
		}
		else = {
			clr_country_flag = ai_goring_build_up
		}
	}
	else_if = {
		limit = {
			OR = {
				AND = {
					has_country_flag = speer_for_germany
					check_variable = { ai_check_temp = 0 }
				}
				AND = {
					has_country_flag = ai_speer_build_up
					check_variable = { ai_check_temp = 1 }
				}
			}
		}
		add_to_variable = { GCW_Speer_arms_factory = 1 }
		if = {
			limit = {
				has_country_flag = ai_speer_build_up
				check_variable = { GER_Speer_Influence > GER_Speer_Influence_limit }
			}
			activate_mission = GER_GCW_speer_build_up
		}
		else = {
			clr_country_flag = ai_speer_build_up
		}
	}
	else_if = {
		limit = {
			OR = {
				AND = {
					has_country_flag = heydrich_for_germany
					check_variable = { ai_check_temp = 0 }
				}
				AND = {
					has_country_flag = ai_heydrich_build_up
					check_variable = { ai_check_temp = 1 }
				}
			}
		}
		add_to_variable = { GCW_Heydrich_arms_factory = 1 }
		if = {
			limit = {
				has_country_flag = ai_heydrich_build_up
				check_variable = { GER_Heydrich_Influence > GER_Heydrich_Influence_limit }
			}
			activate_mission = GER_GCW_heydrich_build_up
		}
		else = {
			clr_country_flag = ai_heydrich_build_up
		}
	}
}

GCW_build_up_forts = {
	custom_effect_tooltip = GCW_build_up_forts_tt
	if = {
		limit = {
			OR = {
				AND = {
					has_country_flag = bormann_for_germany
					check_variable = { ai_check_temp = 0 }
				}
				AND = {
					has_country_flag = ai_bormann_build_up
					check_variable = { ai_check_temp = 1 }
				}
			}
		}
		60 = {
			add_building_construction = {
				type = bunker
				level = 2
				province = 425
				instant_build = yes
			}
			add_building_construction = {
				type = bunker
				level = 1
				province = 6582
				instant_build = yes
			}
		}
		65 = {
			add_building_construction = {
				type = bunker
				level = 1
				province = 11545
				instant_build = yes
			}
			add_building_construction = {
				type = bunker
				level = 1
				province = 11481
				instant_build = yes
			}
			add_building_construction = {
				type = bunker
				level = 1
				province = 514
				instant_build = yes
			}
			add_building_construction = {
				type = bunker
				level = 1
				province = 6559
				instant_build = yes
			}
			add_building_construction = {
				type = bunker
				level = 1
				province = 11432
				instant_build = yes
			}
		}
		set_country_flag = GCW_bormann_forts_done
		if = {
			limit = {
				has_country_flag = ai_bormann_build_up
				check_variable = { GER_Bormann_Influence > GER_Bormann_Influence_limit }
			}
			activate_mission = GER_GCW_bormann_build_up
		}
		else = {
			clr_country_flag = ai_bormann_build_up
		}
	}
	else_if = {
		limit = {
			OR = {
				AND = {
					has_country_flag = goring_for_germany
					check_variable = { ai_check_temp = 0 }
				}
				AND = {
					has_country_flag = ai_goring_build_up
					check_variable = { ai_check_temp = 1 }
				}
			}
		}
		188 = {
			add_building_construction = {
				type = bunker
				level = 2
				province = 9238
				instant_build = yes
			}
			add_building_construction = {
				type = bunker
				level = 1
				province = 6218
				instant_build = yes
			}
			add_building_construction = {
				type = bunker
				level = 1
				province = 6263
				instant_build = yes
			}
			add_building_construction = {
				type = bunker
				level = 1
				province = 3271
				instant_build = yes
			}
			add_building_construction = {
				type = bunker
				level = 2
				province = 3326
				instant_build = yes
			}
			add_building_construction = {
				type = bunker
				level = 1
				province = 6377
				instant_build = yes
			}
		}
		set_country_flag = GCW_goring_forts_done
		if = {
			limit = {
				has_country_flag = ai_goring_build_up
				check_variable = { GER_Goring_Influence > GER_Goring_Influence_limit }
			}
			activate_mission = GER_GCW_goring_build_up
		}
		else = {
			clr_country_flag = ai_goring_build_up
		}
	}
	else_if = {
		limit = {
			OR = {
				AND = {
					has_country_flag = speer_for_germany
					check_variable = { ai_check_temp = 0 }
				}
				AND = {
					has_country_flag = ai_speer_build_up
					check_variable = { ai_check_temp = 1 }
				}
			}
		}
		55 = {
			add_building_construction = {
				type = bunker
				level = 2
				province = 3574
				instant_build = yes
			}
			add_building_construction = {
				type = bunker
				level = 1
				province = 589
				instant_build = yes
			}
			add_building_construction = {
				type = bunker
				level = 2
				province = 6488
				instant_build = yes
			}
			add_building_construction = {
				type = bunker
				level = 1
				province = 6444
				instant_build = yes
			}
		}
		57 = {
			add_building_construction = {
				type = bunker
				level = 1
				province = 529
				instant_build = yes
			}
		}
		51 = {
			add_building_construction = {
				type = bunker
				level = 1
				province = 3547
				instant_build = yes
			}
			add_building_construction = {
				type = bunker
				level = 1
				province = 3488
				instant_build = yes
			}
		}
		set_country_flag = GCW_speer_forts_done
		if = {
			limit = {
				has_country_flag = ai_speer_build_up
				check_variable = { GER_Speer_Influence > GER_Speer_Influence_limit }
			}
			activate_mission = GER_GCW_speer_build_up
		}
		else = {
			clr_country_flag = ai_speer_build_up
		}
	}
	else_if = {
		limit = {
			OR = {
				AND = {
					has_country_flag = heydrich_for_germany
					check_variable = { ai_check_temp = 0 }
				}
				AND = {
					has_country_flag = ai_heydrich_build_up
					check_variable = { ai_check_temp = 1 }
				}
			}
		}
		42 = {
			add_building_construction = {
				type = bunker
				level = 2
				province = 11560
				instant_build = yes
			}
			add_building_construction = {
				type = bunker
				level = 1
				province = 3558
				instant_build = yes
			}
		}
		28 = {
			add_building_construction = {
				type = bunker
				level = 1
				province = 549
				instant_build = yes
			}
			add_building_construction = {
				type = bunker
				level = 2
				province = 9503
				instant_build = yes
			}
			add_building_construction = {
				type = bunker
				level = 1
				province = 6529
				instant_build = yes
			}
			add_building_construction = {
				type = bunker
				level = 2
				province = 678
				instant_build = yes
			}
		}
		set_country_flag = GCW_heydrich_forts_done
		if = {
			limit = {
				has_country_flag = ai_heydrich_build_up
				check_variable = { GER_Heydrich_Influence > GER_Heydrich_Influence_limit }
			}
			activate_mission = GER_GCW_heydrich_build_up
		}
		else = {
			clr_country_flag = ai_heydrich_build_up
		}
	}
}

GCW_build_up_infantry_weapons = {
	custom_effect_tooltip = GCW_build_up_infantry_weapons_tt
	if = {
		limit = {
			OR = {
				AND = {
					has_country_flag = bormann_for_germany
					check_variable = { ai_check_temp = 0 }
				}
				AND = {
					has_country_flag = ai_bormann_build_up
					check_variable = { ai_check_temp = 1 }
				}
			}
		}
		add_to_variable = { GCW_Bormann_infantry_weapons = 5000 }
		if = {
			limit = {
				has_country_flag = ai_bormann_build_up
				check_variable = { GER_Bormann_Influence > GER_Bormann_Influence_limit }
			}
			activate_mission = GER_GCW_bormann_build_up
		}
		else = {
			clr_country_flag = ai_bormann_build_up
		}
	}
	else_if = {
		limit = {
			OR = {
				AND = {
					has_country_flag = goring_for_germany
					check_variable = { ai_check_temp = 0 }
				}
				AND = {
					has_country_flag = ai_goring_build_up
					check_variable = { ai_check_temp = 1 }
				}
			}
		}
		add_to_variable = { GCW_Goring_infantry_weapons = 5000 }
		if = {
			limit = {
				has_country_flag = ai_goring_build_up
				check_variable = { GER_Goring_Influence > GER_Goring_Influence_limit }
			}
			activate_mission = GER_GCW_goring_build_up
		}
		else = {
			clr_country_flag = ai_goring_build_up
		}
	}
	else_if = {
		limit = {
			OR = {
				AND = {
					has_country_flag = speer_for_germany
					check_variable = { ai_check_temp = 0 }
				}
				AND = {
					has_country_flag = ai_speer_build_up
					check_variable = { ai_check_temp = 1 }
				}
			}
		}
		add_to_variable = { GCW_Speer_infantry_weapons = 5000 }
		if = {
			limit = {
				has_country_flag = ai_speer_build_up
				check_variable = { GER_Speer_Influence > GER_Speer_Influence_limit }
			}
			activate_mission = GER_GCW_speer_build_up
		}
		else = {
			clr_country_flag = ai_speer_build_up
		}
	}
	else_if = {
		limit = {
			OR = {
				AND = {
					has_country_flag = heydrich_for_germany
					check_variable = { ai_check_temp = 0 }
				}
				AND = {
					has_country_flag = ai_heydrich_build_up
					check_variable = { ai_check_temp = 1 }
				}
			}
		}
		add_to_variable = { GCW_Heydrich_infantry_weapons = 5000 }
		if = {
			limit = {
				has_country_flag = ai_heydrich_build_up
				check_variable = { GER_Heydrich_Influence > GER_Heydrich_Influence_limit }
			}
			activate_mission = GER_GCW_heydrich_build_up
		}
		else = {
			clr_country_flag = ai_heydrich_build_up
		}
	}
}

GCW_build_up_heer_units = {
	custom_effect_tooltip = GCW_build_up_heer_units_tt
	if = {
		limit = {
			OR = {
				AND = {
					has_country_flag = bormann_for_germany
					check_variable = { ai_check_temp = 0 }
				}
				AND = {
					has_country_flag = ai_bormann_build_up
					check_variable = { ai_check_temp = 1 }
				}
			}
		}
		add_to_variable = { GCW_Bormann_heer_units = 2 }
		if = {
			limit = {
				has_country_flag = ai_bormann_build_up
				check_variable = { GER_Bormann_Influence > GER_Bormann_Influence_limit }
			}
			activate_mission = GER_GCW_bormann_build_up
		}
		else = {
			clr_country_flag = ai_bormann_build_up
		}
	}
	else_if = {
		limit = {
			OR = {
				AND = {
					has_country_flag = goring_for_germany
					check_variable = { ai_check_temp = 0 }
				}
				AND = {
					has_country_flag = ai_goring_build_up
					check_variable = { ai_check_temp = 1 }
				}
			}
		}
		add_to_variable = { GCW_Goring_heer_units = 2 }
		if = {
			limit = {
				has_country_flag = ai_goring_build_up
				check_variable = { GER_Goring_Influence > GER_Goring_Influence_limit }
			}
			activate_mission = GER_GCW_goring_build_up
		}
		else = {
			clr_country_flag = ai_goring_build_up
		}
	}
	else_if = {
		limit = {
			OR = {
				AND = {
					has_country_flag = speer_for_germany
					check_variable = { ai_check_temp = 0 }
				}
				AND = {
					has_country_flag = ai_speer_build_up
					check_variable = { ai_check_temp = 1 }
				}
			}
		}
		add_to_variable = { GCW_Speer_heer_units = 2 }
		if = {
			limit = {
				has_country_flag = ai_speer_build_up
				check_variable = { GER_Speer_Influence > GER_Speer_Influence_limit }
			}
			activate_mission = GER_GCW_speer_build_up
		}
		else = {
			clr_country_flag = ai_speer_build_up
		}
	}
	else_if = {
		limit = {
			OR = {
				AND = {
					has_country_flag = heydrich_for_germany
					check_variable = { ai_check_temp = 0 }
				}
				AND = {
					has_country_flag = ai_heydrich_build_up
					check_variable = { ai_check_temp = 1 }
				}
			}
		}
		add_to_variable = { GCW_Heydrich_heer_units = 2 }
		if = {
			limit = {
				has_country_flag = ai_heydrich_build_up
				check_variable = { GER_Heydrich_Influence > GER_Heydrich_Influence_limit }
			}
			activate_mission = GER_GCW_heydrich_build_up
		}
		else = {
			clr_country_flag = ai_heydrich_build_up
		}
	}
}

GER_increase_legitimacy_small = {
	if = {
		limit = {
			has_country_flag = bormann_for_germany
		}
		GER_increase_legitimacy_small_bormann = yes
	}
	else_if = {
		limit = {
			has_country_flag = goring_for_germany
		}
		GER_increase_legitimacy_small_goring = yes
	}
	else_if = {
		limit = {
			has_country_flag = speer_for_germany
		}
		GER_increase_legitimacy_small_speer = yes
	}
	else_if = {
		limit = {
			has_country_flag = heydrich_for_germany
		}
		GER_increase_legitimacy_small_heydrich = yes
	}
}

GER_increase_legitimacy_large = {
	if = {
		limit = {
			has_country_flag = bormann_for_germany
		}
		GER_increase_legitimacy_large_bormann = yes
	}
	else_if = {
		limit = {
			has_country_flag = goring_for_germany
		}
		GER_increase_legitimacy_large_goring = yes
	}
	else_if = {
		limit = {
			has_country_flag = speer_for_germany
		}
		GER_increase_legitimacy_large_speer = yes
	}
	else_if = {
		limit = {
			has_country_flag = heydrich_for_germany
		}
		GER_increase_legitimacy_large_heydrich = yes
	}
}

GER_increase_legitimacy_small_bormann = {
	custom_effect_tooltip = GER_increase_legitimacy_small_bormann_tt
	add_to_variable = { GER_Bormann_Influence = 5 }
}
GER_increase_legitimacy_small_goring = {
	custom_effect_tooltip = GER_increase_legitimacy_small_goring_tt
	add_to_variable = { GER_Goring_Influence = 5 }
}
GER_decrease_legitimacy_small_goring = {
	custom_effect_tooltip = GER_decrease_legitimacy_small_goring_tt
	add_to_variable = { GER_Goring_Influence = -5 }
}
GER_increase_legitimacy_small_speer = {
	custom_effect_tooltip = GER_increase_legitimacy_small_speer_tt
	add_to_variable = { GER_Speer_Influence = 5 }
}
GER_increase_legitimacy_small_heydrich = {
	custom_effect_tooltip = GER_increase_legitimacy_small_heydrich_tt
	add_to_variable = { GER_Heydrich_Influence = 5 }
}

GER_increase_legitimacy_large_bormann = {
	custom_effect_tooltip = GER_increase_legitimacy_large_bormann_tt
	add_to_variable = { GER_Bormann_Influence = 10 }
}
GER_increase_legitimacy_large_goring = {
	custom_effect_tooltip = GER_increase_legitimacy_large_goring_tt
	add_to_variable = { GER_Goring_Influence = 10 }
}
GER_decrease_legitimacy_large_goring = {
	custom_effect_tooltip = GER_decrease_legitimacy_large_goring_tt
	add_to_variable = { GER_Goring_Influence = -10 }
}
GER_increase_legitimacy_large_speer = {
	custom_effect_tooltip = GER_increase_legitimacy_large_speer_tt
	add_to_variable = { GER_Speer_Influence = 10 }
}
GER_increase_legitimacy_large_heydrich = {
	custom_effect_tooltip = GER_increase_legitimacy_large_heydrich_tt
	add_to_variable = { GER_Heydrich_Influence = 10 }
}

GER_decrease_legitimacy_small_bormann = {
	custom_effect_tooltip = GER_decrease_legitimacy_small_bormann_tt
	add_to_variable = { GER_Bormann_Influence = -5 }
}
GER_decrease_legitimacy_small_speer = {
	custom_effect_tooltip = GER_decrease_legitimacy_small_speer_tt
	add_to_variable = { GER_Speer_Influence = -5 }
}
GER_decrease_legitimacy_small_heydrich = {
	custom_effect_tooltip = GER_decrease_legitimacy_small_heydrich_tt
	add_to_variable = { GER_Heydrich_Influence = -5 }
}

GER_decrease_legitimacy_large_bormann = {
	custom_effect_tooltip = GER_decrease_legitimacy_large_bormann_tt
	add_to_variable = { GER_Bormann_Influence = -10 }
}

GER_decrease_legitimacy_large_speer = {
	custom_effect_tooltip = GER_increase_legitimacy_large_speer_tt
	add_to_variable = { GER_Speer_Influence = -10 }
}
GER_decrease_legitimacy_large_heydrich = {
	custom_effect_tooltip = GER_increase_legitimacy_large_heydrich_tt
	add_to_variable = { GER_Heydrich_Influence = -10 }
}

GCW_intialise_legitimacy = {
	set_country_flag = GER_GCW_mechanic_flag
	set_temp_variable = { GCW_temp_legitimacy = GCW_legitimacy }
	divide_temp_variable = { GCW_temp_legitimacy = -200 }
	add_to_temp_variable = { GCW_temp_legitimacy = 0.4 }
	set_variable = { GCW_legitimacy_training_time_factor = GCW_temp_legitimacy }
	multiply_temp_variable = { GCW_temp_legitimacy = -1 }
	set_variable = { GCW_legitimacy_production_factory_max_efficiency_factor = GCW_temp_legitimacy }
	add_to_temp_variable = { GCW_temp_legitimacy = 0.1 }
	set_variable = { GCW_legitimacy_planning_speed = GCW_temp_legitimacy }
	add_to_temp_variable = { GCW_temp_legitimacy = 0.05 }
	set_variable = { GCW_legitimacy_political_power_factor = GCW_temp_legitimacy }
	add_dynamic_modifier = { modifier = GCW_legitimacy_dynamic_modifier }
}

GCW_increase_legitimacy_small = {
	custom_effect_tooltip = GCW_increase_legitimacy_small_tt
	add_to_variable = { GCW_legitimacy = 5 }
	clamp_variable = { var = GCW_legitimacy min = 0 max = 100 }
	add_to_variable = { GCW_legitimacy_training_time_factor = -0.05 }
	clamp_variable = { var = GCW_legitimacy_training_time_factor min = -0.1 max = 0.4 }
	add_to_variable = { GCW_legitimacy_production_factory_max_efficiency_factor = 0.05 }
	clamp_variable = { var = GCW_legitimacy_production_factory_max_efficiency_factor min = -0.4 max = 0.1 }
	add_to_variable = { GCW_legitimacy_planning_speed = 0.05 }
	clamp_variable = { var = GCW_legitimacy_planning_speed min = -0.3 max = 0.2 }
	add_to_variable = { GCW_legitimacy_political_power_factor = 0.05 }
	clamp_variable = { var = GCW_legitimacy_political_power_factor min = -0.25 max = 0.25 }
}
GCW_increase_legitimacy_large = {
	custom_effect_tooltip = GCW_increase_legitimacy_large_tt
	add_to_variable = { GCW_legitimacy = 10 }
	clamp_variable = { var = GCW_legitimacy min = 0 max = 100 }
	add_to_variable = { GCW_legitimacy_training_time_factor = -0.10 }
	clamp_variable = { var = GCW_legitimacy_training_time_factor min = -0.1 max = 0.4 }
	add_to_variable = { GCW_legitimacy_production_factory_max_efficiency_factor = 0.10 }
	clamp_variable = { var = GCW_legitimacy_production_factory_max_efficiency_factor min = -0.4 max = 0.1 }
	add_to_variable = { GCW_legitimacy_planning_speed = 0.10 }
	clamp_variable = { var = GCW_legitimacy_planning_speed min = -0.3 max = 0.2 }
	add_to_variable = { GCW_legitimacy_political_power_factor = 0.10 }
	clamp_variable = { var = GCW_legitimacy_political_power_factor min = -0.25 max = 0.25 }
}
GCW_decrease_legitimacy_small = {
	custom_effect_tooltip = GCW_decrease_legitimacy_small_tt
	subtract_from_variable = { GCW_legitimacy = 5 }
	clamp_variable = { var = GCW_legitimacy min = 0 max = 100 }
	subtract_from_variable = { GCW_legitimacy_training_time_factor = -0.05 }
	clamp_variable = { var = GCW_legitimacy_training_time_factor min = -0.1 max = 0.4 }
	subtract_from_variable = { GCW_legitimacy_production_factory_max_efficiency_factor = 0.05 }
	clamp_variable = { var = GCW_legitimacy_production_factory_max_efficiency_factor min = -0.4 max = 0.1 }
	subtract_from_variable = { GCW_legitimacy_planning_speed = 0.05 }
	clamp_variable = { var = GCW_legitimacy_planning_speed min = -0.3 max = 0.2 }
	subtract_from_variable = { GCW_legitimacy_political_power_factor = 0.05 }
	clamp_variable = { var = GCW_legitimacy_political_power_factor min = -0.25 max = 0.25 }
}
GCW_decrease_legitimacy_large = {
	custom_effect_tooltip = GCW_decrease_legitimacy_large_tt
	subtract_from_variable = { GCW_legitimacy = 10 }
	clamp_variable = { var = GCW_legitimacy min = 0 max = 100 }
	subtract_from_variable = { GCW_legitimacy_training_time_factor = -0.10 }
	clamp_variable = { var = GCW_legitimacy_training_time_factor min = -0.1 max = 0.4 }
	subtract_from_variable = { GCW_legitimacy_production_factory_max_efficiency_factor = 0.10 }
	clamp_variable = { var = GCW_legitimacy_production_factory_max_efficiency_factor min = -0.4 max = 0.1 }
	subtract_from_variable = { GCW_legitimacy_planning_speed = 0.10 }
	clamp_variable = { var = GCW_legitimacy_planning_speed min = -0.3 max = 0.2 }
	subtract_from_variable = { GCW_legitimacy_political_power_factor = 0.10 }
	clamp_variable = { var = GCW_legitimacy_political_power_factor min = -0.25 max = 0.25 }
}

GCW_increase_influence_small = {
	custom_effect_tooltip = GCW_increase_influence_small_tt
	add_to_variable = { GCW_influence = 5 }
}
GCW_increase_influence_large = {
	custom_effect_tooltip = GCW_increase_influence_large_tt
	add_to_variable = { GCW_influence = 10 }
}
GCW_decrease_influence_small = {
	custom_effect_tooltip = GCW_decrease_influence_small_tt
	subtract_from_variable = { GCW_influence = 5 }
}
GCW_decrease_influence_large = {
	custom_effect_tooltip = GCW_decrease_influence_large_tt
	subtract_from_variable = { GCW_influence = 10 }
}   

GCW_war_balancing_script_main = {
	if = {
		limit = {
			check_variable = { war_balancing_script_count < 32 }
		}
		GCW_war_balancing_script_1 = yes
	}
	else = {
		GCW_war_balancing_script_2 = yes
	}
	add_to_variable = { war_balancing_script_count = 1 }
}

GCW_war_balancing_script_1 = {
	for_each_scope_loop = {
		array = global.GCW_contenders

		add_to_variable = { global.GCW_average_num_controlled_states = num_controlled_states }
	}

	divide_variable = { global.GCW_average_num_controlled_states = global.GCW_contenders^num }
	round_variable = global.GCW_average_num_controlled_states

	for_each_scope_loop = {
		array = global.GCW_contenders

		set_temp_variable = { temp_num_controlled_states = num_controlled_states }
		subtract_from_temp_variable = { temp_num_controlled_states = global.GCW_average_num_controlled_states }

		if = {
			limit = {
				check_variable = { temp_num_controlled_states > 4 }
				is_ai = yes
			}
			add_ideas = GCW_hidden_debuff_1
			remove_ideas = {
				GCW_hidden_debuff_2
				GCW_hidden_debuff_3
			}
		}
		else_if = {
			limit = {
				check_variable = { temp_num_controlled_states > 2 }
				is_ai = yes
			}
			add_ideas = GCW_hidden_debuff_2
			remove_ideas = {
				GCW_hidden_debuff_1
				GCW_hidden_debuff_3
			}
		}
		else_if = {
			limit = {
				check_variable = { temp_num_controlled_states > 0 }
				is_ai = yes
			}
			add_ideas = GCW_hidden_debuff_3
			remove_ideas = {
				GCW_hidden_debuff_1
				GCW_hidden_debuff_2
			}
		}
		# player debuff
		else_if = {
			limit = {
				check_variable = { temp_num_controlled_states > 6 }
			}
			add_ideas = GCW_hidden_debuff_2
			remove_ideas = {
				GCW_hidden_debuff_1
				GCW_hidden_debuff_3
			}
		}
		else_if = {
			limit = {
				check_variable = { temp_num_controlled_states > 4 }
			}
			add_ideas = GCW_hidden_debuff_3
			remove_ideas = {
				GCW_hidden_debuff_1
				GCW_hidden_debuff_2
			}
		}
		else = {
			remove_ideas = {
				GCW_hidden_debuff_1
				GCW_hidden_debuff_2
				GCW_hidden_debuff_3
			}
		}
	}

	clear_variable = global.GCW_average_num_controlled_states
}

GCW_war_balancing_script_2 = {
	for_each_scope_loop = {
		array = global.GCW_contenders

		if = {
			limit = { is_ai = yes }
			add_to_variable = { global.GCW_average_surrender_progress = surrender_progress }
		}
	}

	multiply_variable = { global.GCW_average_surrender_progress = 100 }
	divide_variable = { global.GCW_average_surrender_progress = global.GCW_contenders^num }
	round_variable = global.GCW_average_surrender_progress
	divide_variable = { global.GCW_average_surrender_progress = 100 }

	for_each_scope_loop = {
		array = global.GCW_contenders

		set_temp_variable = { temp_surrender_progress = surrender_progress }
		subtract_from_temp_variable = { temp_surrender_progress = global.GCW_average_surrender_progress }

		if = {
			limit = {
				check_variable = { temp_surrender_progress > 0.30 }
			}
			add_ideas = GCW_hidden_debuff_1
			remove_ideas = {
				GCW_hidden_debuff_2
				GCW_hidden_debuff_3
			}
		}
		else_if = {
			limit = {
				check_variable = { temp_surrender_progress > 0.15 }
			}
			add_ideas = GCW_hidden_debuff_2
			remove_ideas = {
				GCW_hidden_debuff_1
				GCW_hidden_debuff_3
			}
		}
		else_if = {
			limit = {
				check_variable = { temp_surrender_progress > 0 }
			}
			add_ideas = GCW_hidden_debuff_3
			remove_ideas = {
				GCW_hidden_debuff_1
				GCW_hidden_debuff_2
			}
		}
		else = {
			remove_ideas = {
				GCW_hidden_debuff_1
				GCW_hidden_debuff_2
				GCW_hidden_debuff_3
			}
		}

		if = {
			limit = { is_ai = no }
			remove_ideas = {
				GCW_hidden_debuff_1
				GCW_hidden_debuff_2
				GCW_hidden_debuff_3
			}
		}
	}

	clear_variable = global.GCW_average_surrender_progress
}

anti_heydrich_pact_script = {
	for_each_scope_loop = {
		array = global.GCW_contenders

		if = {
			limit = { has_country_flag = anti_heydrich_pact }
			every_owned_state = {
				limit = {
					NOT = { is_controlled_by = PREV }
					NOT = { is_controlled_by = HGR }
				}
				PREV = { set_state_controller = PREV }
			}
		}
	}

	if = {
		limit = { country_exists = SGR }
		SGR = {
			create_faction = anti_heydrich_pact_faction
			if = {
				limit = {
					country_exists = BGR
					BGR = { has_country_flag = anti_heydrich_pact }
				}
				BGR = { white_peace = SGR }
				SGR = { add_to_faction = BGR }
			}
			if = {
				limit = {
					country_exists = GGR
					GGR = { has_country_flag = anti_heydrich_pact }
				}
				GGR = { white_peace = SGR }
				if = {
					limit = {
						country_exists = BGR
						BGR = { has_country_flag = anti_heydrich_pact }
					}
					GGR = { white_peace = BGR }
				}
				SGR = { add_to_faction = GGR }
			}
			every_country = {
				news_event = { id = WORLD.28 days = 1 }
			}
		}
	}
	else_if = {
		limit = { country_exists = BGR }
		BGR = {
			create_faction = anti_heydrich_pact_faction
			if = {
				limit = {
					country_exists = GGR
					GGR = { has_country_flag = anti_heydrich_pact }
				}
				GGR = { white_peace = BGR }
				BGR = { add_to_faction = GGR }
			}
			every_country = {
				news_event = { id = WORLD.28 days = 1 }
			}
		}
	}
	set_global_flag = anti_heydrich_pact_formed

	# Faction Status
	BGR = { add_ideas = Anti_Heydrich_Pact }
	SGR = { add_ideas = Anti_Heydrich_Pact }
	GGR = { add_ideas = Anti_Heydrich_Pact }
}